/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import contoller.DishTableController;
import database.DataBase;
import items.Flight;
import contoller.FlightTableController;
import contoller.TableController;
import items.Dish;
import items.Task;
import items.Task.TaskCallType;
import items.Task.TaskObjectType;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dialog;
import java.awt.LayoutManager;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import settings.Settings;
import utils.EvalHelper;
import utils.GuiUtils;

/**
 *
 * @author Cedric Jansen, Lukas Gabriel
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {

        initComponents();
    }

    public boolean darkModeEnabled = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        taskTemplate = new javax.swing.JPanel();
        taskContent = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        updateFlightDialogue = new javax.swing.JDialog();
        updateFlightDialogueContentPane = new javax.swing.JPanel();
        updateFlightDialogueContentInner = new javax.swing.JPanel();
        updateFlightDialogueTitle = new javax.swing.JLabel();
        updateFlightDialogueName = new javax.swing.JLabel();
        updateFlightDialogueID = new javax.swing.JLabel();
        updateFlightDialogueStart = new javax.swing.JLabel();
        updateFlightDialogueDest = new javax.swing.JLabel();
        updateFlightDialogueDescription = new javax.swing.JLabel();
        updateFlightDialogueNameInput = new javax.swing.JTextField();
        updateFlightDialogueStartInput = new javax.swing.JTextField();
        updateFlightDialogueDestInput = new javax.swing.JTextField();
        updateFlightDialogueCancelButton = new javax.swing.JButton();
        updateFlightDialogueUpdateButton1 = new javax.swing.JButton();
        updateFlightDialogueIDInput = new javax.swing.JLabel();
        createFlightDialogue = new javax.swing.JDialog();
        createFlightDialogueContentPane = new javax.swing.JPanel();
        createFlightDialogueContentInner = new javax.swing.JPanel();
        createFlightDialogueTitle = new javax.swing.JLabel();
        createFlightDialogueName = new javax.swing.JLabel();
        createFlightDialogueID = new javax.swing.JLabel();
        createFlightDialogueStart = new javax.swing.JLabel();
        createFlightDialogueDest = new javax.swing.JLabel();
        createFlightDialogueDescription = new javax.swing.JLabel();
        createFlightDialogueNameInput = new javax.swing.JTextField();
        createFlightDialogueStartInput = new javax.swing.JTextField();
        createFlightDialogueDestInput = new javax.swing.JTextField();
        createFlightDialogueCancelButton = new javax.swing.JButton();
        flightDialogueCreateButton = new javax.swing.JButton();
        createFlightDialogueIDInput = new javax.swing.JLabel();
        createFlightDialoguePassenger = new javax.swing.JLabel();
        createFlightDialoguePassengerSlider = new javax.swing.JSlider();
        createFlightDialogueDishCap = new javax.swing.JLabel();
        createFlightDialogueDishCapSlider = new javax.swing.JSlider();
        createFlightDialoguePassengerAmount = new javax.swing.JLabel();
        createFlightDialogueDishCapAmount = new javax.swing.JLabel();
        createFlightDialogueErrorLabel = new javax.swing.JLabel();
        createFlightDialogueErrors = new javax.swing.JLabel();
        deleteFlightDialogue = new javax.swing.JDialog();
        deleteFlightDialogueFirstLabel = new javax.swing.JLabel();
        deleteFlightDialogueNameLabel = new javax.swing.JLabel();
        deleteFlightDialogueSecondLabel = new javax.swing.JLabel();
        deleteFlightDialogueConfirmButton = new javax.swing.JButton();
        deleteFlightDialogueCancelButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        updateDishDialogue = new javax.swing.JDialog();
        updateDishDialogueContentPane = new javax.swing.JPanel();
        updateDishDialogueContentInner = new javax.swing.JPanel();
        updateDishDialogueTitle = new javax.swing.JLabel();
        updateDishDialogueName = new javax.swing.JLabel();
        updateDishDialogueID = new javax.swing.JLabel();
        updateDishDialogueVegan = new javax.swing.JLabel();
        updateDishDialogueVegetarian = new javax.swing.JLabel();
        updateDishDialogueDescription = new javax.swing.JLabel();
        updateDishDialogueNameInput = new javax.swing.JTextField();
        updateDishDialogueCancelButton = new javax.swing.JButton();
        updateDishDialogueUpdateButton = new javax.swing.JButton();
        updateDishDialogueIDInput = new javax.swing.JLabel();
        updateDishDialogueVeganInput = new javax.swing.JRadioButton();
        updateDishDialogueVegetarianInput = new javax.swing.JRadioButton();
        updateDishDialoguePrice = new javax.swing.JLabel();
        updateDishDialoguePriceInput = new javax.swing.JTextField();
        createDishDialogue = new javax.swing.JDialog();
        createDishDialogueContentPane = new javax.swing.JPanel();
        createDishDialogueContentInnter = new javax.swing.JPanel();
        createDishDialogueTitle = new javax.swing.JLabel();
        createDishDialogueName = new javax.swing.JLabel();
        createDishDialogueID = new javax.swing.JLabel();
        createDishDialogueVegan = new javax.swing.JLabel();
        createDishDialogueVegetarian = new javax.swing.JLabel();
        createDishDialogueDescription = new javax.swing.JLabel();
        createDishDialogueNameInput = new javax.swing.JTextField();
        createDishDialogueCancelButton = new javax.swing.JButton();
        createDishDialogueCreateButton = new javax.swing.JButton();
        createDishDialogueIDInput = new javax.swing.JLabel();
        createDishDialoguePrice = new javax.swing.JLabel();
        createDishDialogueErrorLabel = new javax.swing.JLabel();
        createDishDialogueErrors = new javax.swing.JLabel();
        createDishVegetarianInput = new javax.swing.JRadioButton();
        createDishVeganInput = new javax.swing.JRadioButton();
        createDishDialoguePriceInput = new javax.swing.JTextField();
        deleteDishDialogue = new javax.swing.JDialog();
        deletDishDialogueFirstLabel = new javax.swing.JLabel();
        deleteDishDialogueNameLabel = new javax.swing.JLabel();
        deletDishDialogueSecondLabel = new javax.swing.JLabel();
        deletDishDialogueConfirmButton = new javax.swing.JButton();
        deletDishDialogueCancelButton = new javax.swing.JButton();
        navPane = new javax.swing.JPanel();
        overviewButton = new javax.swing.JButton();
        flightButton = new javax.swing.JButton();
        dishesButton = new javax.swing.JButton();
        groupLabel = new javax.swing.JLabel();
        settingsButton = new javax.swing.JButton();
        contentPane = new javax.swing.JPanel();
        flightContentPane = new javax.swing.JPanel();
        flightTablePane = new javax.swing.JPanel();
        flightTableInnerPane = new javax.swing.JPanel();
        flightScrollPane = new javax.swing.JScrollPane();
        flightTable = new javax.swing.JTable();
        flightOverviewPane = new javax.swing.JPanel();
        flightOverview = new javax.swing.JPanel();
        flightOverviewTitle = new javax.swing.JLabel();
        flightOverviewContent = new javax.swing.JPanel();
        flightOverviewDishPane = new javax.swing.JPanel();
        flightOverviewDishLabel = new javax.swing.JLabel();
        flightOverviewDishContent = new javax.swing.JLabel();
        flightOverviewActions = new javax.swing.JPanel();
        flightOverviewActionsDelete = new javax.swing.JButton();
        flightOverviewActionsUpdate = new javax.swing.JButton();
        flightOverviewActionsFeedbackPane = new javax.swing.JPanel();
        flightOverviewActionsFeedbackLabel = new javax.swing.JLabel();
        flightOverviewID = new javax.swing.JPanel();
        flightOverviewIDLabel = new javax.swing.JLabel();
        flightOverviewIDContent = new javax.swing.JLabel();
        flightOverviewStartDest = new javax.swing.JPanel();
        flightOverviewStartLabel = new javax.swing.JLabel();
        flightOverviewStartContent = new javax.swing.JLabel();
        flightOverviewDestContent = new javax.swing.JLabel();
        flightOverviewDestLabel = new javax.swing.JLabel();
        flightOverviewNewFlightButton = new javax.swing.JButton();
        overviewContentPane = new javax.swing.JPanel();
        overviewPane = new javax.swing.JPanel();
        overviewContent = new javax.swing.JPanel();
        overvieContentTitle = new javax.swing.JLabel();
        overviewContentIntroduction = new javax.swing.JLabel();
        overviewContentScrollTextPane = new javax.swing.JScrollPane();
        overviewContentScrollTextPaneContent = new javax.swing.JTextPane();
        overviewContentSecondTitle = new javax.swing.JLabel();
        overviewContentScrollTextPane2 = new javax.swing.JScrollPane();
        overviewContentScrollFlightDishPane = new javax.swing.JTextPane();
        overviewContentThirdTitle = new javax.swing.JLabel();
        overviewContentThirdScrollPane = new javax.swing.JScrollPane();
        overviewContentThirdScrollPaneContent = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        accessTaskPanel = new javax.swing.JPanel();
        quickAccess = new javax.swing.JPanel();
        quickAcessLabel = new javax.swing.JLabel();
        quickAccessTabPane = new javax.swing.JTabbedPane();
        quickAccessFlightTab = new javax.swing.JPanel();
        quickAccessFlightCreateButton = new javax.swing.JButton();
        quickAccessFlightDeleteButton = new javax.swing.JButton();
        quickAccessDishTab = new javax.swing.JPanel();
        quickAccessDishCreateButton = new javax.swing.JButton();
        quickAccessDishDeleteButton = new javax.swing.JButton();
        lastTasks = new javax.swing.JPanel();
        taskLabel = new javax.swing.JLabel();
        taskScrollPane = new javax.swing.JScrollPane();
        taskScrollPanel = new javax.swing.JPanel();
        dishContentPane = new javax.swing.JPanel();
        dishTablePane = new javax.swing.JPanel();
        dishTablePaneInner = new javax.swing.JPanel();
        dishTableInnerPane = new javax.swing.JPanel();
        dishScrollPane = new javax.swing.JScrollPane();
        dishTable = new javax.swing.JTable();
        dishOverviewPane = new javax.swing.JPanel();
        dishOverview = new javax.swing.JPanel();
        dishOverviewTitle = new javax.swing.JLabel();
        dishOverviewContent = new javax.swing.JPanel();
        dishOverviewFlightPane = new javax.swing.JPanel();
        dishOverviewFlightLabel = new javax.swing.JLabel();
        dishOverviewFlightContent = new javax.swing.JLabel();
        dishOverviewActions = new javax.swing.JPanel();
        dishOverviewActionsDelete = new javax.swing.JButton();
        dishOverviewActionsUpdate = new javax.swing.JButton();
        dishOverviewActionsFeedbackPane = new javax.swing.JPanel();
        dishOverviewActionsFeedbackLabel = new javax.swing.JLabel();
        dishOverviewID = new javax.swing.JPanel();
        dishOverviewIDLabel = new javax.swing.JLabel();
        dishOverviewIDContent = new javax.swing.JLabel();
        dishOverviewAttr = new javax.swing.JPanel();
        dishOverviewVeganLabel = new javax.swing.JLabel();
        dishOverviewVeganCont = new javax.swing.JLabel();
        dishOverviewVegetarianCont = new javax.swing.JLabel();
        dishOverviewVegetarianLabel = new javax.swing.JLabel();
        dishOverviewPriceLabel = new javax.swing.JLabel();
        dishOverviewPriceContent = new javax.swing.JLabel();
        dishOverviewNewDishButton = new javax.swing.JButton();
        settingsContentPane = new javax.swing.JPanel();
        settingsTitle = new javax.swing.JLabel();
        settingsAppTitle = new javax.swing.JLabel();
        settingsAppVersion = new javax.swing.JLabel();
        settingsAppLicencee = new javax.swing.JLabel();
        settingsAppTitleInput = new javax.swing.JTextField();
        settingsAppVersionInput = new javax.swing.JTextField();
        settingsAppLicenceeInput = new javax.swing.JTextField();
        settingsSaveButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        settingsMenuItem = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        basicDataMenu = new javax.swing.JMenu();
        overviewMenu = new javax.swing.JMenuItem();
        seperator = new javax.swing.JPopupMenu.Separator();
        flightMenu = new javax.swing.JMenuItem();
        dishMenu = new javax.swing.JMenuItem();
        manageMenu = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutSubMenu = new javax.swing.JMenuItem();

        taskTemplate.setBackground(new java.awt.Color(255, 255, 255));

        taskContent.setText("No tasks performed yet...");

        javax.swing.GroupLayout taskTemplateLayout = new javax.swing.GroupLayout(taskTemplate);
        taskTemplate.setLayout(taskTemplateLayout);
        taskTemplateLayout.setHorizontalGroup(
            taskTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskTemplateLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(taskContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        taskTemplateLayout.setVerticalGroup(
            taskTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskTemplateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(taskContent, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar1.setRollover(true);

        updateFlightDialogue.setTitle("Update Flight");
        updateFlightDialogue.setAlwaysOnTop(true);
        updateFlightDialogue.setMinimumSize(new java.awt.Dimension(400, 500));
        updateFlightDialogue.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        updateFlightDialogue.setName("Update Flight"); // NOI18N
        updateFlightDialogue.setType(java.awt.Window.Type.POPUP);

        updateFlightDialogueContentInner.setBackground(new java.awt.Color(255, 255, 255));

        updateFlightDialogueTitle.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        updateFlightDialogueTitle.setText("Update");

        updateFlightDialogueName.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateFlightDialogueName.setText("Name:");

        updateFlightDialogueID.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateFlightDialogueID.setText("ID:");

        updateFlightDialogueStart.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateFlightDialogueStart.setText("Start Airport:");

        updateFlightDialogueDest.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateFlightDialogueDest.setText("Destination:");

        updateFlightDialogueDescription.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        updateFlightDialogueDescription.setText("Every input, that is not edited, will not be updated.");
        updateFlightDialogueDescription.setOpaque(true);

        updateFlightDialogueNameInput.setBackground(new java.awt.Color(240, 240, 240));
        updateFlightDialogueNameInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N
        updateFlightDialogueNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFlightDialogueNameInputActionPerformed(evt);
            }
        });

        updateFlightDialogueStartInput.setBackground(new java.awt.Color(240, 240, 240));
        updateFlightDialogueStartInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N

        updateFlightDialogueDestInput.setBackground(new java.awt.Color(240, 240, 240));
        updateFlightDialogueDestInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N

        updateFlightDialogueCancelButton.setBackground(new java.awt.Color(200, 20, 20));
        updateFlightDialogueCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        updateFlightDialogueCancelButton.setText("Cancel");
        updateFlightDialogueCancelButton.setBorder(null);
        updateFlightDialogueCancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateFlightDialogueCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFlightDialogueCancelButtonActionPerformed(evt);
            }
        });

        updateFlightDialogueUpdateButton1.setBackground(new java.awt.Color(20, 200, 20));
        updateFlightDialogueUpdateButton1.setText("Update");
        updateFlightDialogueUpdateButton1.setBorder(null);
        updateFlightDialogueUpdateButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateFlightDialogueUpdateButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFlightDialogueUpdateButton1ActionPerformed(evt);
            }
        });

        updateFlightDialogueIDInput.setText("Id..");

        javax.swing.GroupLayout updateFlightDialogueContentInnerLayout = new javax.swing.GroupLayout(updateFlightDialogueContentInner);
        updateFlightDialogueContentInner.setLayout(updateFlightDialogueContentInnerLayout);
        updateFlightDialogueContentInnerLayout.setHorizontalGroup(
            updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateFlightDialogueContentInnerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateFlightDialogueContentInnerLayout.createSequentialGroup()
                        .addGroup(updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(updateFlightDialogueTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateFlightDialogueName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateFlightDialogueID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateFlightDialogueStart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateFlightDialogueDest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateFlightDialogueNameInput)
                            .addComponent(updateFlightDialogueStartInput)
                            .addComponent(updateFlightDialogueDestInput)
                            .addGroup(updateFlightDialogueContentInnerLayout.createSequentialGroup()
                                .addComponent(updateFlightDialogueIDInput)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(updateFlightDialogueDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateFlightDialogueContentInnerLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateFlightDialogueUpdateButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateFlightDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        updateFlightDialogueContentInnerLayout.setVerticalGroup(
            updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateFlightDialogueContentInnerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateFlightDialogueTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateFlightDialogueName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateFlightDialogueNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateFlightDialogueID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateFlightDialogueIDInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateFlightDialogueStart, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateFlightDialogueStartInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateFlightDialogueDest, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateFlightDialogueDestInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateFlightDialogueDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(updateFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateFlightDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateFlightDialogueUpdateButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout updateFlightDialogueContentPaneLayout = new javax.swing.GroupLayout(updateFlightDialogueContentPane);
        updateFlightDialogueContentPane.setLayout(updateFlightDialogueContentPaneLayout);
        updateFlightDialogueContentPaneLayout.setHorizontalGroup(
            updateFlightDialogueContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateFlightDialogueContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateFlightDialogueContentInner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        updateFlightDialogueContentPaneLayout.setVerticalGroup(
            updateFlightDialogueContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateFlightDialogueContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateFlightDialogueContentInner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout updateFlightDialogueLayout = new javax.swing.GroupLayout(updateFlightDialogue.getContentPane());
        updateFlightDialogue.getContentPane().setLayout(updateFlightDialogueLayout);
        updateFlightDialogueLayout.setHorizontalGroup(
            updateFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updateFlightDialogueContentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        updateFlightDialogueLayout.setVerticalGroup(
            updateFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updateFlightDialogueContentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        updateFlightDialogue.getAccessibleContext().setAccessibleParent(this);

        createFlightDialogue.setTitle("Create new Flight");
        createFlightDialogue.setAlwaysOnTop(true);
        createFlightDialogue.setMinimumSize(new java.awt.Dimension(400, 500));
        createFlightDialogue.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        createFlightDialogue.setName("Update Flight"); // NOI18N
        createFlightDialogue.setType(java.awt.Window.Type.POPUP);

        createFlightDialogueContentInner.setBackground(new java.awt.Color(255, 255, 255));

        createFlightDialogueTitle.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        createFlightDialogueTitle.setText("Create new Flight");

        createFlightDialogueName.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createFlightDialogueName.setText("Name:");

        createFlightDialogueID.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createFlightDialogueID.setText("ID:");

        createFlightDialogueStart.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createFlightDialogueStart.setText("Start Airport:");

        createFlightDialogueDest.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createFlightDialogueDest.setText("Destination:");

        createFlightDialogueDescription.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        createFlightDialogueDescription.setText("Every input is needed to successfully create a new flight.");
        createFlightDialogueDescription.setOpaque(true);

        createFlightDialogueNameInput.setBackground(new java.awt.Color(240, 240, 240));
        createFlightDialogueNameInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N
        createFlightDialogueNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFlightDialogueNameInputActionPerformed(evt);
            }
        });

        createFlightDialogueStartInput.setBackground(new java.awt.Color(240, 240, 240));
        createFlightDialogueStartInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N

        createFlightDialogueDestInput.setBackground(new java.awt.Color(240, 240, 240));
        createFlightDialogueDestInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N

        createFlightDialogueCancelButton.setBackground(new java.awt.Color(200, 20, 20));
        createFlightDialogueCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        createFlightDialogueCancelButton.setText("Cancel");
        createFlightDialogueCancelButton.setBorder(null);
        createFlightDialogueCancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createFlightDialogueCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFlightDialogueCancelButtonActionPerformed(evt);
            }
        });

        flightDialogueCreateButton.setBackground(new java.awt.Color(20, 200, 20));
        flightDialogueCreateButton.setText("Save");
        flightDialogueCreateButton.setBorder(null);
        flightDialogueCreateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        flightDialogueCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightDialogueCreateButtonActionPerformed(evt);
            }
        });

        createFlightDialogueIDInput.setText("Will be autogenerated.");

        createFlightDialoguePassenger.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createFlightDialoguePassenger.setText("Passenger capacity:");

        createFlightDialoguePassengerSlider.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createFlightDialoguePassengerSlider.setMajorTickSpacing(5);
        createFlightDialoguePassengerSlider.setMaximum(200);
        createFlightDialoguePassengerSlider.setMinimum(1);
        createFlightDialoguePassengerSlider.setValue(1);
        createFlightDialoguePassengerSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                createFlightDialoguePassengerSliderStateChanged(evt);
            }
        });

        createFlightDialogueDishCap.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createFlightDialogueDishCap.setText("Dish capacity:");

        createFlightDialogueDishCapSlider.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createFlightDialogueDishCapSlider.setMajorTickSpacing(1);
        createFlightDialogueDishCapSlider.setMaximum(5);
        createFlightDialogueDishCapSlider.setMinimum(1);
        createFlightDialogueDishCapSlider.setValue(1);
        createFlightDialogueDishCapSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                createFlightDialogueDishCapSliderStateChanged(evt);
            }
        });

        createFlightDialoguePassengerAmount.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        createFlightDialoguePassengerAmount.setText("1");

        createFlightDialogueDishCapAmount.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        createFlightDialogueDishCapAmount.setText("1");

        createFlightDialogueErrorLabel.setForeground(new java.awt.Color(200, 20, 20));

        createFlightDialogueErrors.setForeground(new java.awt.Color(200, 20, 20));

        javax.swing.GroupLayout createFlightDialogueContentInnerLayout = new javax.swing.GroupLayout(createFlightDialogueContentInner);
        createFlightDialogueContentInner.setLayout(createFlightDialogueContentInnerLayout);
        createFlightDialogueContentInnerLayout.setHorizontalGroup(
            createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createFlightDialogueContentInnerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createFlightDialogueContentInnerLayout.createSequentialGroup()
                        .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(createFlightDialogueName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createFlightDialogueID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createFlightDialogueStart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createFlightDialogueDest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(createFlightDialogueDestInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(createFlightDialogueIDInput, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createFlightDialogueStartInput, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createFlightDialogueNameInput))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(createFlightDialogueContentInnerLayout.createSequentialGroup()
                        .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(createFlightDialogueErrorLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(createFlightDialogueContentInnerLayout.createSequentialGroup()
                                .addComponent(flightDialogueCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(createFlightDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(createFlightDialogueDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(createFlightDialogueTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(createFlightDialogueContentInnerLayout.createSequentialGroup()
                                    .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(createFlightDialoguePassenger)
                                        .addComponent(createFlightDialogueDishCap))
                                    .addGap(18, 18, 18)
                                    .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(createFlightDialogueDishCapSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(createFlightDialoguePassengerSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(createFlightDialogueErrors, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createFlightDialoguePassengerAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createFlightDialogueDishCapAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        createFlightDialogueContentInnerLayout.setVerticalGroup(
            createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createFlightDialogueContentInnerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createFlightDialogueTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createFlightDialogueName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createFlightDialogueNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createFlightDialogueID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createFlightDialogueIDInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createFlightDialogueStart, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createFlightDialogueStartInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createFlightDialogueDestInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createFlightDialogueDest, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(createFlightDialoguePassenger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createFlightDialoguePassengerSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(createFlightDialoguePassengerAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(createFlightDialogueDishCap, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createFlightDialogueDishCapSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createFlightDialogueDishCapAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(createFlightDialogueDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createFlightDialogueErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createFlightDialogueErrors, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(createFlightDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createFlightDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flightDialogueCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout createFlightDialogueContentPaneLayout = new javax.swing.GroupLayout(createFlightDialogueContentPane);
        createFlightDialogueContentPane.setLayout(createFlightDialogueContentPaneLayout);
        createFlightDialogueContentPaneLayout.setHorizontalGroup(
            createFlightDialogueContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createFlightDialogueContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createFlightDialogueContentInner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        createFlightDialogueContentPaneLayout.setVerticalGroup(
            createFlightDialogueContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createFlightDialogueContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createFlightDialogueContentInner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout createFlightDialogueLayout = new javax.swing.GroupLayout(createFlightDialogue.getContentPane());
        createFlightDialogue.getContentPane().setLayout(createFlightDialogueLayout);
        createFlightDialogueLayout.setHorizontalGroup(
            createFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createFlightDialogueContentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        createFlightDialogueLayout.setVerticalGroup(
            createFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createFlightDialogueContentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        deleteFlightDialogue.setTitle("Delete a Flight");
        deleteFlightDialogue.setAlwaysOnTop(true);
        deleteFlightDialogue.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        deleteFlightDialogue.setName("Delete a Flight"); // NOI18N

        deleteFlightDialogueFirstLabel.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        deleteFlightDialogueFirstLabel.setText("Are you sure, that you want to delete flight: ");

        deleteFlightDialogueNameLabel.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        deleteFlightDialogueNameLabel.setText("Name of the flight");

        deleteFlightDialogueSecondLabel.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        deleteFlightDialogueSecondLabel.setText("This action cannot be undone!");

        deleteFlightDialogueConfirmButton.setBackground(new java.awt.Color(20, 200, 20));
        deleteFlightDialogueConfirmButton.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        deleteFlightDialogueConfirmButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteFlightDialogueConfirmButton.setText("YES");
        deleteFlightDialogueConfirmButton.setBorder(null);
        deleteFlightDialogueConfirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteFlightDialogueConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFlightDialogueConfirmButtonActionPerformed(evt);
            }
        });

        deleteFlightDialogueCancelButton.setBackground(new java.awt.Color(200, 20, 20));
        deleteFlightDialogueCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteFlightDialogueCancelButton.setText("CANCEL");
        deleteFlightDialogueCancelButton.setBorder(null);
        deleteFlightDialogueCancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteFlightDialogueCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFlightDialogueCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deleteFlightDialogueLayout = new javax.swing.GroupLayout(deleteFlightDialogue.getContentPane());
        deleteFlightDialogue.getContentPane().setLayout(deleteFlightDialogueLayout);
        deleteFlightDialogueLayout.setHorizontalGroup(
            deleteFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteFlightDialogueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deleteFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(deleteFlightDialogueLayout.createSequentialGroup()
                        .addComponent(deleteFlightDialogueConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteFlightDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, deleteFlightDialogueLayout.createSequentialGroup()
                        .addComponent(deleteFlightDialogueFirstLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(deleteFlightDialogueNameLabel))
                    .addComponent(deleteFlightDialogueSecondLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        deleteFlightDialogueLayout.setVerticalGroup(
            deleteFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteFlightDialogueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deleteFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteFlightDialogueFirstLabel)
                    .addComponent(deleteFlightDialogueNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteFlightDialogueSecondLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(deleteFlightDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteFlightDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteFlightDialogueConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 139, Short.MAX_VALUE)
        );

        updateDishDialogue.setTitle("Update Dish");
        updateDishDialogue.setAlwaysOnTop(true);
        updateDishDialogue.setMinimumSize(new java.awt.Dimension(400, 500));
        updateDishDialogue.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        updateDishDialogue.setName("Update Flight"); // NOI18N
        updateDishDialogue.setType(java.awt.Window.Type.POPUP);

        updateDishDialogueContentInner.setBackground(new java.awt.Color(255, 255, 255));

        updateDishDialogueTitle.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        updateDishDialogueTitle.setText("Update");

        updateDishDialogueName.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateDishDialogueName.setText("Name:");

        updateDishDialogueID.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateDishDialogueID.setText("ID:");

        updateDishDialogueVegan.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateDishDialogueVegan.setText("Vegan:");

        updateDishDialogueVegetarian.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateDishDialogueVegetarian.setText("Vegetarian");

        updateDishDialogueDescription.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        updateDishDialogueDescription.setText("Every input, that is not edited, will not be updated.");
        updateDishDialogueDescription.setOpaque(true);

        updateDishDialogueNameInput.setBackground(new java.awt.Color(240, 240, 240));
        updateDishDialogueNameInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N
        updateDishDialogueNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDishDialogueNameInputActionPerformed(evt);
            }
        });

        updateDishDialogueCancelButton.setBackground(new java.awt.Color(200, 20, 20));
        updateDishDialogueCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        updateDishDialogueCancelButton.setText("Cancel");
        updateDishDialogueCancelButton.setBorder(null);
        updateDishDialogueCancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateDishDialogueCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDishDialogueCancelButtonActionPerformed(evt);
            }
        });

        updateDishDialogueUpdateButton.setBackground(new java.awt.Color(20, 200, 20));
        updateDishDialogueUpdateButton.setText("Update");
        updateDishDialogueUpdateButton.setBorder(null);
        updateDishDialogueUpdateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateDishDialogueUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDishDialogueUpdateButtonActionPerformed(evt);
            }
        });

        updateDishDialogueIDInput.setText("Id..");

        updateDishDialogueVeganInput.setBackground(new java.awt.Color(0, 0, 0));
        updateDishDialogueVeganInput.setForeground(new java.awt.Color(255, 255, 255));
        updateDishDialogueVeganInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDishDialogueVeganInputActionPerformed(evt);
            }
        });

        updateDishDialogueVegetarianInput.setBackground(new java.awt.Color(0, 0, 0));
        updateDishDialogueVegetarianInput.setForeground(new java.awt.Color(255, 255, 255));

        updateDishDialoguePrice.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        updateDishDialoguePrice.setText("Price:");

        updateDishDialoguePriceInput.setBackground(new java.awt.Color(240, 240, 240));
        updateDishDialoguePriceInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N
        updateDishDialoguePriceInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDishDialoguePriceInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateDishDialogueContentInnerLayout = new javax.swing.GroupLayout(updateDishDialogueContentInner);
        updateDishDialogueContentInner.setLayout(updateDishDialogueContentInnerLayout);
        updateDishDialogueContentInnerLayout.setHorizontalGroup(
            updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDishDialogueContentInnerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateDishDialogueContentInnerLayout.createSequentialGroup()
                        .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(updateDishDialogueTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateDishDialogueName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateDishDialogueID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateDishDialogueVegan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateDishDialogueVegetarian, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateDishDialoguePrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateDishDialogueNameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(updateDishDialogueContentInnerLayout.createSequentialGroup()
                                .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateDishDialogueVeganInput)
                                    .addComponent(updateDishDialogueIDInput)
                                    .addComponent(updateDishDialogueVegetarianInput))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(updateDishDialoguePriceInput, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(updateDishDialogueDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateDishDialogueContentInnerLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateDishDialogueUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateDishDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        updateDishDialogueContentInnerLayout.setVerticalGroup(
            updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDishDialogueContentInnerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateDishDialogueTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(updateDishDialogueContentInnerLayout.createSequentialGroup()
                        .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateDishDialogueName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateDishDialogueNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateDishDialogueID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateDishDialogueIDInput))
                        .addGap(16, 16, 16)
                        .addComponent(updateDishDialogueVegan, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(updateDishDialogueVeganInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateDishDialogueVegetarian, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDishDialogueVegetarianInput, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateDishDialoguePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDishDialoguePriceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateDishDialogueDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(updateDishDialogueContentInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateDishDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDishDialogueUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout updateDishDialogueContentPaneLayout = new javax.swing.GroupLayout(updateDishDialogueContentPane);
        updateDishDialogueContentPane.setLayout(updateDishDialogueContentPaneLayout);
        updateDishDialogueContentPaneLayout.setHorizontalGroup(
            updateDishDialogueContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDishDialogueContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateDishDialogueContentInner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        updateDishDialogueContentPaneLayout.setVerticalGroup(
            updateDishDialogueContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDishDialogueContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateDishDialogueContentInner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout updateDishDialogueLayout = new javax.swing.GroupLayout(updateDishDialogue.getContentPane());
        updateDishDialogue.getContentPane().setLayout(updateDishDialogueLayout);
        updateDishDialogueLayout.setHorizontalGroup(
            updateDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updateDishDialogueContentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        updateDishDialogueLayout.setVerticalGroup(
            updateDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updateDishDialogueContentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        createDishDialogue.setTitle("Create new Dish");
        createDishDialogue.setAlwaysOnTop(true);
        createDishDialogue.setMinimumSize(new java.awt.Dimension(400, 500));
        createDishDialogue.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        createDishDialogue.setName("Update Flight"); // NOI18N
        createDishDialogue.setType(java.awt.Window.Type.POPUP);

        createDishDialogueContentInnter.setBackground(new java.awt.Color(255, 255, 255));

        createDishDialogueTitle.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        createDishDialogueTitle.setText("Create new Dish");

        createDishDialogueName.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createDishDialogueName.setText("Name:");

        createDishDialogueID.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createDishDialogueID.setText("ID:");

        createDishDialogueVegan.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createDishDialogueVegan.setText("Vegan:");

        createDishDialogueVegetarian.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createDishDialogueVegetarian.setText("Vegetarian");

        createDishDialogueDescription.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        createDishDialogueDescription.setText("Every input is needed to successfully create a new flight.");
        createDishDialogueDescription.setOpaque(true);

        createDishDialogueNameInput.setBackground(new java.awt.Color(240, 240, 240));
        createDishDialogueNameInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N
        createDishDialogueNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDishDialogueNameInputActionPerformed(evt);
            }
        });

        createDishDialogueCancelButton.setBackground(new java.awt.Color(200, 20, 20));
        createDishDialogueCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        createDishDialogueCancelButton.setText("Cancel");
        createDishDialogueCancelButton.setBorder(null);
        createDishDialogueCancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createDishDialogueCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDishDialogueCancelButtonActionPerformed(evt);
            }
        });

        createDishDialogueCreateButton.setBackground(new java.awt.Color(20, 200, 20));
        createDishDialogueCreateButton.setText("Save");
        createDishDialogueCreateButton.setBorder(null);
        createDishDialogueCreateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createDishDialogueCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDishDialogueCreateButtonActionPerformed(evt);
            }
        });

        createDishDialogueIDInput.setText("Will be autogenerated.");

        createDishDialoguePrice.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        createDishDialoguePrice.setText("Price");

        createDishDialogueErrorLabel.setForeground(new java.awt.Color(200, 20, 20));

        createDishDialogueErrors.setForeground(new java.awt.Color(200, 20, 20));

        createDishVegetarianInput.setBackground(new java.awt.Color(0, 0, 0));
        createDishVegetarianInput.setForeground(new java.awt.Color(255, 255, 255));
        createDishVegetarianInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDishVegetarianInputActionPerformed(evt);
            }
        });

        createDishVeganInput.setBackground(new java.awt.Color(0, 0, 0));
        createDishVeganInput.setForeground(new java.awt.Color(255, 255, 255));
        createDishVeganInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDishVeganInputActionPerformed(evt);
            }
        });

        createDishDialoguePriceInput.setBackground(new java.awt.Color(240, 240, 240));
        createDishDialoguePriceInput.setFont(new java.awt.Font("Roboto Condensed", 0, 11)); // NOI18N
        createDishDialoguePriceInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDishDialoguePriceInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createDishDialogueContentInnterLayout = new javax.swing.GroupLayout(createDishDialogueContentInnter);
        createDishDialogueContentInnter.setLayout(createDishDialogueContentInnterLayout);
        createDishDialogueContentInnterLayout.setHorizontalGroup(
            createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createDishDialogueContentInnterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createDishDialogueContentInnterLayout.createSequentialGroup()
                        .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(createDishDialogueName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createDishDialogueID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createDishDialogueVegan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createDishDialogueVegetarian, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createDishDialogueIDInput, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createDishDialogueNameInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createDishVegetarianInput, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createDishVeganInput, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createDishDialoguePriceInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(createDishDialogueErrorLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(createDishDialogueContentInnterLayout.createSequentialGroup()
                            .addComponent(createDishDialogueCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(createDishDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(createDishDialogueDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(createDishDialogueContentInnterLayout.createSequentialGroup()
                            .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(createDishDialogueTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(createDishDialoguePrice))
                            .addGap(119, 119, 119))
                        .addComponent(createDishDialogueErrors, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        createDishDialogueContentInnterLayout.setVerticalGroup(
            createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createDishDialogueContentInnterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createDishDialogueTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDishDialogueName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDishDialogueNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDishDialogueID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDishDialogueIDInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(createDishDialogueVegan, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDishVeganInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(createDishDialogueVegetarian, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDishVegetarianInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDishDialoguePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDishDialoguePriceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(createDishDialogueDescription)
                .addGap(45, 45, 45)
                .addComponent(createDishDialogueErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createDishDialogueErrors, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(createDishDialogueContentInnterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDishDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDishDialogueCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout createDishDialogueContentPaneLayout = new javax.swing.GroupLayout(createDishDialogueContentPane);
        createDishDialogueContentPane.setLayout(createDishDialogueContentPaneLayout);
        createDishDialogueContentPaneLayout.setHorizontalGroup(
            createDishDialogueContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createDishDialogueContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createDishDialogueContentInnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        createDishDialogueContentPaneLayout.setVerticalGroup(
            createDishDialogueContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createDishDialogueContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createDishDialogueContentInnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout createDishDialogueLayout = new javax.swing.GroupLayout(createDishDialogue.getContentPane());
        createDishDialogue.getContentPane().setLayout(createDishDialogueLayout);
        createDishDialogueLayout.setHorizontalGroup(
            createDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createDishDialogueContentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        createDishDialogueLayout.setVerticalGroup(
            createDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createDishDialogueContentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        deleteDishDialogue.setTitle("Delete a Dish");
        deleteDishDialogue.setAlwaysOnTop(true);
        deleteDishDialogue.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        deleteDishDialogue.setName("Delete a Flight"); // NOI18N

        deletDishDialogueFirstLabel.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        deletDishDialogueFirstLabel.setText("Are you sure, that you want to delete dish: ");

        deleteDishDialogueNameLabel.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        deleteDishDialogueNameLabel.setText("Name of the dish");

        deletDishDialogueSecondLabel.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        deletDishDialogueSecondLabel.setText("This action cannot be undone!");

        deletDishDialogueConfirmButton.setBackground(new java.awt.Color(20, 200, 20));
        deletDishDialogueConfirmButton.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        deletDishDialogueConfirmButton.setForeground(new java.awt.Color(255, 255, 255));
        deletDishDialogueConfirmButton.setText("YES");
        deletDishDialogueConfirmButton.setBorder(null);
        deletDishDialogueConfirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletDishDialogueConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletDishDialogueConfirmButtonActionPerformed(evt);
            }
        });

        deletDishDialogueCancelButton.setBackground(new java.awt.Color(200, 20, 20));
        deletDishDialogueCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        deletDishDialogueCancelButton.setText("CANCEL");
        deletDishDialogueCancelButton.setBorder(null);
        deletDishDialogueCancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletDishDialogueCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletDishDialogueCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deleteDishDialogueLayout = new javax.swing.GroupLayout(deleteDishDialogue.getContentPane());
        deleteDishDialogue.getContentPane().setLayout(deleteDishDialogueLayout);
        deleteDishDialogueLayout.setHorizontalGroup(
            deleteDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteDishDialogueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deleteDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(deleteDishDialogueLayout.createSequentialGroup()
                        .addComponent(deletDishDialogueConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deletDishDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, deleteDishDialogueLayout.createSequentialGroup()
                        .addComponent(deletDishDialogueFirstLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(deleteDishDialogueNameLabel))
                    .addComponent(deletDishDialogueSecondLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        deleteDishDialogueLayout.setVerticalGroup(
            deleteDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteDishDialogueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deleteDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletDishDialogueFirstLabel)
                    .addComponent(deleteDishDialogueNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deletDishDialogueSecondLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(deleteDishDialogueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletDishDialogueCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletDishDialogueConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EAF: Eat&Fly Management");
        setBackground(new java.awt.Color(230, 230, 230));
        setFont(new java.awt.Font("Roboto Condensed", 0, 10)); // NOI18N
        setIconImage(new ImageIcon(getClass().getClassLoader().getResource("icon_128.png")).getImage());
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(1340, 800));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.X_AXIS));

        navPane.setBackground(new java.awt.Color(255, 255, 255));
        navPane.setMinimumSize(new java.awt.Dimension(140, 100));
        navPane.setPreferredSize(new java.awt.Dimension(140, 300));

        overviewButton.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        overviewButton.setText("Overview");
        overviewButton.setBorder(null);
        overviewButton.setBorderPainted(false);
        overviewButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        overviewButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        overviewButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                overviewButtonFocusGained(evt);
            }
        });
        overviewButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                overviewButtonMouseClicked(evt);
            }
        });
        overviewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overviewButtonActionPerformed(evt);
            }
        });

        flightButton.setBackground(new java.awt.Color(255, 255, 255));
        flightButton.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        flightButton.setText("Flights");
        flightButton.setBorderPainted(false);
        flightButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        flightButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        flightButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flightButtonMouseClicked(evt);
            }
        });
        flightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightButtonActionPerformed(evt);
            }
        });

        dishesButton.setBackground(new java.awt.Color(255, 255, 255));
        dishesButton.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        dishesButton.setText("Dishes");
        dishesButton.setBorder(null);
        dishesButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dishesButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        dishesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dishesButtonActionPerformed(evt);
            }
        });

        groupLabel.setFont(new java.awt.Font("Roboto Condensed", 2, 12)); // NOI18N
        groupLabel.setForeground(new java.awt.Color(220, 220, 220));
        groupLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        groupLabel.setText("Group 24");

        settingsButton.setBackground(new java.awt.Color(255, 255, 255));
        settingsButton.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        settingsButton.setText("Settings");
        settingsButton.setBorder(null);
        settingsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settingsButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navPaneLayout = new javax.swing.GroupLayout(navPane);
        navPane.setLayout(navPaneLayout);
        navPaneLayout.setHorizontalGroup(
            navPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(groupLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(flightButton, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
            .addComponent(overviewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(dishesButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(settingsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        navPaneLayout.setVerticalGroup(
            navPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navPaneLayout.createSequentialGroup()
                .addComponent(overviewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dishesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 399, Short.MAX_VALUE)
                .addComponent(settingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(groupLabel))
        );

        getContentPane().add(navPane);

        contentPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        contentPane.setPreferredSize(new java.awt.Dimension(1200, 1147));
        contentPane.setLayout(new java.awt.CardLayout());

        flightContentPane.setName("flightContentPane"); // NOI18N

        flightTablePane.setPreferredSize(new java.awt.Dimension(600, 360));

        flightTableInnerPane.setBackground(new java.awt.Color(255, 255, 255));
        flightTableInnerPane.setMinimumSize(new java.awt.Dimension(600, 340));
        flightTableInnerPane.setPreferredSize(new java.awt.Dimension(600, 340));

        flightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight", "ID", "Start", "Destination"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        flightTable.setRowHeight(24);
        flightTable.getTableHeader().setReorderingAllowed(false);
        flightScrollPane.setViewportView(flightTable);

        javax.swing.GroupLayout flightTableInnerPaneLayout = new javax.swing.GroupLayout(flightTableInnerPane);
        flightTableInnerPane.setLayout(flightTableInnerPaneLayout);
        flightTableInnerPaneLayout.setHorizontalGroup(
            flightTableInnerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightTableInnerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );
        flightTableInnerPaneLayout.setVerticalGroup(
            flightTableInnerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightTableInnerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout flightTablePaneLayout = new javax.swing.GroupLayout(flightTablePane);
        flightTablePane.setLayout(flightTablePaneLayout);
        flightTablePaneLayout.setHorizontalGroup(
            flightTablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightTablePaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(flightTableInnerPane, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE))
        );
        flightTablePaneLayout.setVerticalGroup(
            flightTablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightTablePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(flightTableInnerPane, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        flightOverviewPane.setPreferredSize(new java.awt.Dimension(360, 360));

        flightOverview.setBackground(new java.awt.Color(255, 255, 255));
        flightOverview.setMinimumSize(new java.awt.Dimension(0, 0));
        flightOverview.setPreferredSize(new java.awt.Dimension(543, 354));

        flightOverviewTitle.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        flightOverviewTitle.setText("Flight");

        flightOverviewDishPane.setBackground(new java.awt.Color(220, 220, 220));

        flightOverviewDishLabel.setBackground(new java.awt.Color(20, 20, 20));
        flightOverviewDishLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        flightOverviewDishLabel.setForeground(new java.awt.Color(240, 240, 240));
        flightOverviewDishLabel.setText("Assigned Dishes:");
        flightOverviewDishLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        flightOverviewDishLabel.setOpaque(true);

        flightOverviewDishContent.setBackground(new java.awt.Color(230, 230, 230));
        flightOverviewDishContent.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N

        javax.swing.GroupLayout flightOverviewDishPaneLayout = new javax.swing.GroupLayout(flightOverviewDishPane);
        flightOverviewDishPane.setLayout(flightOverviewDishPaneLayout);
        flightOverviewDishPaneLayout.setHorizontalGroup(
            flightOverviewDishPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(flightOverviewDishLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
            .addGroup(flightOverviewDishPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightOverviewDishContent, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );
        flightOverviewDishPaneLayout.setVerticalGroup(
            flightOverviewDishPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewDishPaneLayout.createSequentialGroup()
                .addComponent(flightOverviewDishLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flightOverviewDishContent, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );

        flightOverviewActionsDelete.setBackground(new java.awt.Color(200, 20, 20));
        flightOverviewActionsDelete.setText("Delete");
        flightOverviewActionsDelete.setBorder(null);
        flightOverviewActionsDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightOverviewActionsDeleteActionPerformed(evt);
            }
        });

        flightOverviewActionsUpdate.setBackground(new java.awt.Color(20, 200, 20));
        flightOverviewActionsUpdate.setForeground(new java.awt.Color(255, 255, 255));
        flightOverviewActionsUpdate.setText("Update");
        flightOverviewActionsUpdate.setToolTipText("You can update the flight by directly editing the table as well.");
        flightOverviewActionsUpdate.setBorder(null);
        flightOverviewActionsUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightOverviewActionsUpdateActionPerformed(evt);
            }
        });

        flightOverviewActionsFeedbackLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 12)); // NOI18N
        flightOverviewActionsFeedbackLabel.setForeground(new java.awt.Color(200, 20, 20));

        javax.swing.GroupLayout flightOverviewActionsFeedbackPaneLayout = new javax.swing.GroupLayout(flightOverviewActionsFeedbackPane);
        flightOverviewActionsFeedbackPane.setLayout(flightOverviewActionsFeedbackPaneLayout);
        flightOverviewActionsFeedbackPaneLayout.setHorizontalGroup(
            flightOverviewActionsFeedbackPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightOverviewActionsFeedbackPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(flightOverviewActionsFeedbackLabel)
                .addGap(64, 64, 64))
        );
        flightOverviewActionsFeedbackPaneLayout.setVerticalGroup(
            flightOverviewActionsFeedbackPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewActionsFeedbackPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightOverviewActionsFeedbackLabel)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout flightOverviewActionsLayout = new javax.swing.GroupLayout(flightOverviewActions);
        flightOverviewActions.setLayout(flightOverviewActionsLayout);
        flightOverviewActionsLayout.setHorizontalGroup(
            flightOverviewActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewActionsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(flightOverviewActionsUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(flightOverviewActionsDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(flightOverviewActionsLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(flightOverviewActionsFeedbackPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        flightOverviewActionsLayout.setVerticalGroup(
            flightOverviewActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightOverviewActionsLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addComponent(flightOverviewActionsFeedbackPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(flightOverviewActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flightOverviewActionsUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flightOverviewActionsDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        flightOverviewIDLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        flightOverviewIDLabel.setText("ID:");

        flightOverviewIDContent.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        flightOverviewIDContent.setToolTipText("");

        javax.swing.GroupLayout flightOverviewIDLayout = new javax.swing.GroupLayout(flightOverviewID);
        flightOverviewID.setLayout(flightOverviewIDLayout);
        flightOverviewIDLayout.setHorizontalGroup(
            flightOverviewIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewIDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightOverviewIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flightOverviewIDContent, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        flightOverviewIDLayout.setVerticalGroup(
            flightOverviewIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(flightOverviewIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flightOverviewIDContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(flightOverviewIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        flightOverviewStartLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        flightOverviewStartLabel.setText("Start Airport: ");

        flightOverviewStartContent.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        flightOverviewStartContent.setToolTipText("");

        flightOverviewDestContent.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        flightOverviewDestContent.setToolTipText("");

        flightOverviewDestLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        flightOverviewDestLabel.setText("Destination:");

        javax.swing.GroupLayout flightOverviewStartDestLayout = new javax.swing.GroupLayout(flightOverviewStartDest);
        flightOverviewStartDest.setLayout(flightOverviewStartDestLayout);
        flightOverviewStartDestLayout.setHorizontalGroup(
            flightOverviewStartDestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewStartDestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flightOverviewStartLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(flightOverviewStartContent, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flightOverviewDestLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(flightOverviewDestContent, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        flightOverviewStartDestLayout.setVerticalGroup(
            flightOverviewStartDestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightOverviewStartDestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(flightOverviewStartDestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(flightOverviewDestContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(flightOverviewDestLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(flightOverviewStartLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(flightOverviewStartContent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout flightOverviewContentLayout = new javax.swing.GroupLayout(flightOverviewContent);
        flightOverviewContent.setLayout(flightOverviewContentLayout);
        flightOverviewContentLayout.setHorizontalGroup(
            flightOverviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(flightOverviewActions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(flightOverviewID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(flightOverviewStartDest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(flightOverviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(flightOverviewContentLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(flightOverviewDishPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        flightOverviewContentLayout.setVerticalGroup(
            flightOverviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightOverviewContentLayout.createSequentialGroup()
                .addComponent(flightOverviewID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flightOverviewStartDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(flightOverviewActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(flightOverviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(flightOverviewContentLayout.createSequentialGroup()
                    .addGap(126, 126, 126)
                    .addComponent(flightOverviewDishPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(125, Short.MAX_VALUE)))
        );

        flightOverviewNewFlightButton.setBackground(new java.awt.Color(0, 0, 0));
        flightOverviewNewFlightButton.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        flightOverviewNewFlightButton.setForeground(new java.awt.Color(255, 255, 255));
        flightOverviewNewFlightButton.setText(" + ADD ");
        flightOverviewNewFlightButton.setToolTipText("Create new flight");
        flightOverviewNewFlightButton.setBorder(null);
        flightOverviewNewFlightButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        flightOverviewNewFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightOverviewNewFlightButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout flightOverviewLayout = new javax.swing.GroupLayout(flightOverview);
        flightOverview.setLayout(flightOverviewLayout);
        flightOverviewLayout.setHorizontalGroup(
            flightOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(flightOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightOverviewLayout.createSequentialGroup()
                        .addComponent(flightOverviewContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(flightOverviewLayout.createSequentialGroup()
                        .addComponent(flightOverviewTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(flightOverviewNewFlightButton))))
        );
        flightOverviewLayout.setVerticalGroup(
            flightOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewLayout.createSequentialGroup()
                .addGroup(flightOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(flightOverviewTitle)
                    .addComponent(flightOverviewNewFlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flightOverviewContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout flightOverviewPaneLayout = new javax.swing.GroupLayout(flightOverviewPane);
        flightOverviewPane.setLayout(flightOverviewPaneLayout);
        flightOverviewPaneLayout.setHorizontalGroup(
            flightOverviewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewPaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(flightOverview, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
        flightOverviewPaneLayout.setVerticalGroup(
            flightOverviewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightOverviewPaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(flightOverview, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addGap(200, 200, 200))
        );

        javax.swing.GroupLayout flightContentPaneLayout = new javax.swing.GroupLayout(flightContentPane);
        flightContentPane.setLayout(flightContentPaneLayout);
        flightContentPaneLayout.setHorizontalGroup(
            flightContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightContentPaneLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(flightTablePane, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(flightOverviewPane, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE))
        );
        flightContentPaneLayout.setVerticalGroup(
            flightContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(flightOverviewPane, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
            .addComponent(flightTablePane, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
        );

        contentPane.add(flightContentPane, "flightContentPane");
        flightContentPane.getAccessibleContext().setAccessibleName("flightContentPane");

        overviewContentPane.setName("overviewContentPane"); // NOI18N
        overviewContentPane.setLayout(new java.awt.GridLayout(1, 2, 50, 0));

        overviewPane.setPreferredSize(new java.awt.Dimension(500, 360));

        overviewContent.setBackground(new java.awt.Color(255, 255, 255));

        overvieContentTitle.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        overvieContentTitle.setText("Eat& Fly Management");

        overviewContentIntroduction.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        overviewContentIntroduction.setText("1. Short introduction and usage");

        overviewContentScrollTextPane.setBorder(null);

        overviewContentScrollTextPaneContent.setBorder(null);
        overviewContentScrollTextPaneContent.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        overviewContentScrollTextPaneContent.setText("On the right side you can see your latest activities in your task history as well as a quick access panel to easily create and delete flights and dishes. Use the navigation bar on the left side or the menu items (or shortcuts F for flight and D for dishes) to swap to the flight or dish overview. There you can view an table with all dishes and flights as well as update or delete flights.");
        overviewContentScrollTextPaneContent.setToolTipText("");
        overviewContentScrollTextPaneContent.setMargin(new java.awt.Insets(10, 5, 10, 5));
        overviewContentScrollTextPaneContent.setSelectionColor(new java.awt.Color(0, 0, 0));
        overviewContentScrollTextPane.setViewportView(overviewContentScrollTextPaneContent);

        overviewContentSecondTitle.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        overviewContentSecondTitle.setText("2. Flight and Dish overview");

        overviewContentScrollTextPane2.setBorder(null);

        overviewContentScrollFlightDishPane.setBorder(null);
        overviewContentScrollFlightDishPane.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        overviewContentScrollFlightDishPane.setText("Each overview features a table that displays the most important information about an item. On the right side, each item overview displays a information panel, where the information is displayed in a layout that is easier to read. This information panel presents buttons that allow the user to update or delete the item. ");
        overviewContentScrollFlightDishPane.setToolTipText("");
        overviewContentScrollFlightDishPane.setMargin(new java.awt.Insets(10, 5, 10, 5));
        overviewContentScrollFlightDishPane.setSelectionColor(new java.awt.Color(0, 0, 0));
        overviewContentScrollTextPane2.setViewportView(overviewContentScrollFlightDishPane);

        overviewContentThirdTitle.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        overviewContentThirdTitle.setText("3. Workflow and design choices");

        overviewContentThirdScrollPane.setBorder(null);

        overviewContentThirdScrollPaneContent.setBorder(null);
        overviewContentThirdScrollPaneContent.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        overviewContentThirdScrollPaneContent.setText("The design choices follow material UI guidlines to ensure a clean layout. Primary colors are used to drag the attention of the user to the important actions. Overall, the application should be easy to understand and self explanatory by conducting the user's action through visual feedback and color flow. All main ui components are responsive and resize properly to window size changes.");
        overviewContentThirdScrollPaneContent.setToolTipText("");
        overviewContentThirdScrollPaneContent.setMargin(new java.awt.Insets(10, 5, 10, 5));
        overviewContentThirdScrollPaneContent.setSelectionColor(new java.awt.Color(0, 0, 0));
        overviewContentThirdScrollPane.setViewportView(overviewContentThirdScrollPaneContent);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(200, 200, 200));
        jLabel1.setText("Created by Cedric Jansen and Lukas Gabriel");

        javax.swing.GroupLayout overviewContentLayout = new javax.swing.GroupLayout(overviewContent);
        overviewContent.setLayout(overviewContentLayout);
        overviewContentLayout.setHorizontalGroup(
            overviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(overviewContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(overviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(overviewContentScrollTextPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(overviewContentScrollTextPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(overviewContentThirdScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(overviewContentLayout.createSequentialGroup()
                        .addGroup(overviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(overvieContentTitle)
                            .addComponent(overviewContentIntroduction)
                            .addComponent(overviewContentSecondTitle)
                            .addComponent(overviewContentThirdTitle)
                            .addComponent(jLabel1))
                        .addGap(0, 300, Short.MAX_VALUE)))
                .addContainerGap())
        );
        overviewContentLayout.setVerticalGroup(
            overviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(overviewContentLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(overvieContentTitle)
                .addGap(18, 18, 18)
                .addComponent(overviewContentIntroduction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(overviewContentScrollTextPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(overviewContentSecondTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(overviewContentScrollTextPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(overviewContentThirdTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(overviewContentThirdScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout overviewPaneLayout = new javax.swing.GroupLayout(overviewPane);
        overviewPane.setLayout(overviewPaneLayout);
        overviewPaneLayout.setHorizontalGroup(
            overviewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(overviewPaneLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(overviewContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        overviewPaneLayout.setVerticalGroup(
            overviewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(overviewPaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(overviewContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        overviewContentPane.add(overviewPane);

        quickAccess.setBackground(new java.awt.Color(255, 255, 255));
        quickAccess.setPreferredSize(new java.awt.Dimension(360, 140));

        quickAcessLabel.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        quickAcessLabel.setText("Quick Access");

        quickAccessTabPane.setBackground(new java.awt.Color(255, 255, 255));
        quickAccessTabPane.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        quickAccessFlightTab.setBackground(new java.awt.Color(255, 255, 255));

        quickAccessFlightCreateButton.setBackground(new java.awt.Color(20, 200, 20));
        quickAccessFlightCreateButton.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        quickAccessFlightCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        quickAccessFlightCreateButton.setText("Create Flight");
        quickAccessFlightCreateButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(30, 200, 20), 4, true));
        quickAccessFlightCreateButton.setBorderPainted(false);
        quickAccessFlightCreateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quickAccessFlightCreateButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        quickAccessFlightCreateButton.setDoubleBuffered(true);
        quickAccessFlightCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickAccessFlightCreateButtonActionPerformed(evt);
            }
        });

        quickAccessFlightDeleteButton.setBackground(new java.awt.Color(200, 20, 20));
        quickAccessFlightDeleteButton.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        quickAccessFlightDeleteButton.setText("Delete Flight");
        quickAccessFlightDeleteButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(30, 200, 20), 4, true));
        quickAccessFlightDeleteButton.setBorderPainted(false);
        quickAccessFlightDeleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quickAccessFlightDeleteButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        quickAccessFlightDeleteButton.setDoubleBuffered(true);
        quickAccessFlightDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickAccessFlightDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout quickAccessFlightTabLayout = new javax.swing.GroupLayout(quickAccessFlightTab);
        quickAccessFlightTab.setLayout(quickAccessFlightTabLayout);
        quickAccessFlightTabLayout.setHorizontalGroup(
            quickAccessFlightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quickAccessFlightTabLayout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addComponent(quickAccessFlightCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quickAccessFlightDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        quickAccessFlightTabLayout.setVerticalGroup(
            quickAccessFlightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quickAccessFlightTabLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(quickAccessFlightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quickAccessFlightCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quickAccessFlightDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        quickAccessTabPane.addTab("   Flights   ", quickAccessFlightTab);

        quickAccessDishTab.setBackground(new java.awt.Color(255, 255, 255));

        quickAccessDishCreateButton.setBackground(new java.awt.Color(20, 200, 20));
        quickAccessDishCreateButton.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        quickAccessDishCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        quickAccessDishCreateButton.setText("Create Dish");
        quickAccessDishCreateButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(30, 200, 20), 4, true));
        quickAccessDishCreateButton.setBorderPainted(false);
        quickAccessDishCreateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quickAccessDishCreateButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        quickAccessDishCreateButton.setDoubleBuffered(true);
        quickAccessDishCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickAccessDishCreateButtonActionPerformed(evt);
            }
        });

        quickAccessDishDeleteButton.setBackground(new java.awt.Color(200, 20, 20));
        quickAccessDishDeleteButton.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        quickAccessDishDeleteButton.setText("Delete Dish");
        quickAccessDishDeleteButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(30, 200, 20), 4, true));
        quickAccessDishDeleteButton.setBorderPainted(false);
        quickAccessDishDeleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        quickAccessDishDeleteButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        quickAccessDishDeleteButton.setDoubleBuffered(true);
        quickAccessDishDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickAccessDishDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout quickAccessDishTabLayout = new javax.swing.GroupLayout(quickAccessDishTab);
        quickAccessDishTab.setLayout(quickAccessDishTabLayout);
        quickAccessDishTabLayout.setHorizontalGroup(
            quickAccessDishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quickAccessDishTabLayout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addComponent(quickAccessDishCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quickAccessDishDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        quickAccessDishTabLayout.setVerticalGroup(
            quickAccessDishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quickAccessDishTabLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(quickAccessDishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quickAccessDishCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quickAccessDishDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        quickAccessTabPane.addTab("   Dishes   ", quickAccessDishTab);

        javax.swing.GroupLayout quickAccessLayout = new javax.swing.GroupLayout(quickAccess);
        quickAccess.setLayout(quickAccessLayout);
        quickAccessLayout.setHorizontalGroup(
            quickAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quickAccessLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quickAcessLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(quickAccessTabPane)
        );
        quickAccessLayout.setVerticalGroup(
            quickAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quickAccessLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(quickAcessLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quickAccessTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        quickAccessTabPane.getAccessibleContext().setAccessibleName("Flights");

        lastTasks.setBackground(new java.awt.Color(255, 255, 255));
        lastTasks.setMaximumSize(new java.awt.Dimension(500, 32767));
        lastTasks.setPreferredSize(new java.awt.Dimension(360, 200));

        taskLabel.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        taskLabel.setText("Your task history");

        taskScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        taskScrollPane.setBorder(null);
        taskScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        taskScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        taskScrollPane.setAutoscrolls(true);
        taskScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        taskScrollPane.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        taskScrollPane.setMaximumSize(new java.awt.Dimension(400, 32767));
        taskScrollPane.setPreferredSize(new java.awt.Dimension(353, 170));

        taskScrollPanel.setMaximumSize(new java.awt.Dimension(400, 32767));
        taskScrollPanel.setLayout(new javax.swing.BoxLayout(taskScrollPanel, javax.swing.BoxLayout.Y_AXIS));
        taskScrollPane.setViewportView(taskScrollPanel);

        javax.swing.GroupLayout lastTasksLayout = new javax.swing.GroupLayout(lastTasks);
        lastTasks.setLayout(lastTasksLayout);
        lastTasksLayout.setHorizontalGroup(
            lastTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lastTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(taskLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(taskScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lastTasksLayout.setVerticalGroup(
            lastTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lastTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(taskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(taskScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout accessTaskPanelLayout = new javax.swing.GroupLayout(accessTaskPanel);
        accessTaskPanel.setLayout(accessTaskPanelLayout);
        accessTaskPanelLayout.setHorizontalGroup(
            accessTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessTaskPanelLayout.createSequentialGroup()
                .addGroup(accessTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastTasks, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                    .addComponent(quickAccess, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        accessTaskPanelLayout.setVerticalGroup(
            accessTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessTaskPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lastTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(quickAccess, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        overviewContentPane.add(accessTaskPanel);

        contentPane.add(overviewContentPane, "overviewContentPane");
        overviewContentPane.getAccessibleContext().setAccessibleName("overviewContentPane");

        dishContentPane.setName("dishContentPane"); // NOI18N
        dishContentPane.setLayout(new java.awt.GridLayout(1, 0));

        dishTablePane.setPreferredSize(new java.awt.Dimension(500, 360));

        dishTablePaneInner.setBackground(new java.awt.Color(255, 255, 255));
        dishTablePaneInner.setMinimumSize(new java.awt.Dimension(600, 340));
        dishTablePaneInner.setPreferredSize(new java.awt.Dimension(600, 340));

        dishTableInnerPane.setBackground(new java.awt.Color(255, 255, 255));
        dishTableInnerPane.setMinimumSize(new java.awt.Dimension(600, 340));

        dishTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dish", "ID", "Vegan", "Vegetarian", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dishTable.setRowHeight(24);
        dishTable.getTableHeader().setReorderingAllowed(false);
        dishScrollPane.setViewportView(dishTable);

        javax.swing.GroupLayout dishTableInnerPaneLayout = new javax.swing.GroupLayout(dishTableInnerPane);
        dishTableInnerPane.setLayout(dishTableInnerPaneLayout);
        dishTableInnerPaneLayout.setHorizontalGroup(
            dishTableInnerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishTableInnerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dishScrollPane)
                .addContainerGap())
        );
        dishTableInnerPaneLayout.setVerticalGroup(
            dishTableInnerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishTableInnerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dishScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dishTablePaneInnerLayout = new javax.swing.GroupLayout(dishTablePaneInner);
        dishTablePaneInner.setLayout(dishTablePaneInnerLayout);
        dishTablePaneInnerLayout.setHorizontalGroup(
            dishTablePaneInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dishTablePaneInnerLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(dishTableInnerPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dishTablePaneInnerLayout.setVerticalGroup(
            dishTablePaneInnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishTablePaneInnerLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(dishTableInnerPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout dishTablePaneLayout = new javax.swing.GroupLayout(dishTablePane);
        dishTablePane.setLayout(dishTablePaneLayout);
        dishTablePaneLayout.setHorizontalGroup(
            dishTablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dishTablePaneLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(dishTablePaneInner, javax.swing.GroupLayout.PREFERRED_SIZE, 576, Short.MAX_VALUE))
        );
        dishTablePaneLayout.setVerticalGroup(
            dishTablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishTablePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(dishTablePaneInner, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        dishContentPane.add(dishTablePane);

        dishOverviewPane.setPreferredSize(new java.awt.Dimension(360, 360));

        dishOverview.setBackground(new java.awt.Color(255, 255, 255));
        dishOverview.setPreferredSize(new java.awt.Dimension(543, 354));

        dishOverviewTitle.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        dishOverviewTitle.setText("Dish");

        dishOverviewFlightPane.setBackground(new java.awt.Color(220, 220, 220));

        dishOverviewFlightLabel.setBackground(new java.awt.Color(20, 20, 20));
        dishOverviewFlightLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        dishOverviewFlightLabel.setForeground(new java.awt.Color(240, 240, 240));
        dishOverviewFlightLabel.setText("Assigned to following flights:");
        dishOverviewFlightLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dishOverviewFlightLabel.setOpaque(true);

        dishOverviewFlightContent.setBackground(new java.awt.Color(230, 230, 230));
        dishOverviewFlightContent.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N

        javax.swing.GroupLayout dishOverviewFlightPaneLayout = new javax.swing.GroupLayout(dishOverviewFlightPane);
        dishOverviewFlightPane.setLayout(dishOverviewFlightPaneLayout);
        dishOverviewFlightPaneLayout.setHorizontalGroup(
            dishOverviewFlightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dishOverviewFlightLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
            .addGroup(dishOverviewFlightPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dishOverviewFlightContent, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );
        dishOverviewFlightPaneLayout.setVerticalGroup(
            dishOverviewFlightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewFlightPaneLayout.createSequentialGroup()
                .addComponent(dishOverviewFlightLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dishOverviewFlightContent, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );

        dishOverviewActionsDelete.setBackground(new java.awt.Color(200, 20, 20));
        dishOverviewActionsDelete.setText("Delete");
        dishOverviewActionsDelete.setBorder(null);
        dishOverviewActionsDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dishOverviewActionsDeleteActionPerformed(evt);
            }
        });

        dishOverviewActionsUpdate.setBackground(new java.awt.Color(20, 200, 20));
        dishOverviewActionsUpdate.setForeground(new java.awt.Color(255, 255, 255));
        dishOverviewActionsUpdate.setText("Update");
        dishOverviewActionsUpdate.setToolTipText("You can update the flight by directly editing the table as well.");
        dishOverviewActionsUpdate.setBorder(null);
        dishOverviewActionsUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dishOverviewActionsUpdateActionPerformed(evt);
            }
        });

        dishOverviewActionsFeedbackLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 12)); // NOI18N
        dishOverviewActionsFeedbackLabel.setForeground(new java.awt.Color(200, 20, 20));

        javax.swing.GroupLayout dishOverviewActionsFeedbackPaneLayout = new javax.swing.GroupLayout(dishOverviewActionsFeedbackPane);
        dishOverviewActionsFeedbackPane.setLayout(dishOverviewActionsFeedbackPaneLayout);
        dishOverviewActionsFeedbackPaneLayout.setHorizontalGroup(
            dishOverviewActionsFeedbackPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dishOverviewActionsFeedbackPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dishOverviewActionsFeedbackLabel)
                .addGap(64, 64, 64))
        );
        dishOverviewActionsFeedbackPaneLayout.setVerticalGroup(
            dishOverviewActionsFeedbackPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewActionsFeedbackPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dishOverviewActionsFeedbackLabel)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dishOverviewActionsLayout = new javax.swing.GroupLayout(dishOverviewActions);
        dishOverviewActions.setLayout(dishOverviewActionsLayout);
        dishOverviewActionsLayout.setHorizontalGroup(
            dishOverviewActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewActionsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dishOverviewActionsUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dishOverviewActionsDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(dishOverviewActionsLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(dishOverviewActionsFeedbackPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dishOverviewActionsLayout.setVerticalGroup(
            dishOverviewActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dishOverviewActionsLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addComponent(dishOverviewActionsFeedbackPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(dishOverviewActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dishOverviewActionsUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dishOverviewActionsDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        dishOverviewIDLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        dishOverviewIDLabel.setText("ID:");

        dishOverviewIDContent.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        dishOverviewIDContent.setToolTipText("");

        javax.swing.GroupLayout dishOverviewIDLayout = new javax.swing.GroupLayout(dishOverviewID);
        dishOverviewID.setLayout(dishOverviewIDLayout);
        dishOverviewIDLayout.setHorizontalGroup(
            dishOverviewIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewIDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dishOverviewIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dishOverviewIDContent, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dishOverviewIDLayout.setVerticalGroup(
            dishOverviewIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dishOverviewIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dishOverviewIDContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dishOverviewIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        dishOverviewVeganLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        dishOverviewVeganLabel.setText("Vegan:");

        dishOverviewVeganCont.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        dishOverviewVeganCont.setToolTipText("");

        dishOverviewVegetarianCont.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        dishOverviewVegetarianCont.setToolTipText("");

        dishOverviewVegetarianLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        dishOverviewVegetarianLabel.setText("Vegetarian:");

        dishOverviewPriceLabel.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        dishOverviewPriceLabel.setText("Price:");

        dishOverviewPriceContent.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        dishOverviewPriceContent.setToolTipText("");

        javax.swing.GroupLayout dishOverviewAttrLayout = new javax.swing.GroupLayout(dishOverviewAttr);
        dishOverviewAttr.setLayout(dishOverviewAttrLayout);
        dishOverviewAttrLayout.setHorizontalGroup(
            dishOverviewAttrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewAttrLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dishOverviewAttrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dishOverviewAttrLayout.createSequentialGroup()
                        .addComponent(dishOverviewVeganLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dishOverviewVeganCont, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dishOverviewVegetarianLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dishOverviewVegetarianCont, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dishOverviewAttrLayout.createSequentialGroup()
                        .addComponent(dishOverviewPriceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dishOverviewPriceContent, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        dishOverviewAttrLayout.setVerticalGroup(
            dishOverviewAttrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dishOverviewAttrLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dishOverviewAttrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dishOverviewVegetarianCont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dishOverviewVegetarianLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dishOverviewVeganLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dishOverviewVeganCont, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dishOverviewAttrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dishOverviewPriceContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dishOverviewPriceLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout dishOverviewContentLayout = new javax.swing.GroupLayout(dishOverviewContent);
        dishOverviewContent.setLayout(dishOverviewContentLayout);
        dishOverviewContentLayout.setHorizontalGroup(
            dishOverviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dishOverviewActions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(dishOverviewID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(dishOverviewAttr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(dishOverviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dishOverviewContentLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(dishOverviewFlightPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        dishOverviewContentLayout.setVerticalGroup(
            dishOverviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dishOverviewContentLayout.createSequentialGroup()
                .addComponent(dishOverviewID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dishOverviewAttr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dishOverviewActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(dishOverviewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dishOverviewContentLayout.createSequentialGroup()
                    .addGap(126, 126, 126)
                    .addComponent(dishOverviewFlightPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(125, Short.MAX_VALUE)))
        );

        dishOverviewNewDishButton.setBackground(new java.awt.Color(0, 0, 0));
        dishOverviewNewDishButton.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
        dishOverviewNewDishButton.setForeground(new java.awt.Color(255, 255, 255));
        dishOverviewNewDishButton.setText(" + ADD ");
        dishOverviewNewDishButton.setToolTipText("Create a new dish");
        dishOverviewNewDishButton.setBorder(null);
        dishOverviewNewDishButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dishOverviewNewDishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dishOverviewNewDishButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dishOverviewLayout = new javax.swing.GroupLayout(dishOverview);
        dishOverview.setLayout(dishOverviewLayout);
        dishOverviewLayout.setHorizontalGroup(
            dishOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dishOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dishOverviewLayout.createSequentialGroup()
                        .addComponent(dishOverviewContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(dishOverviewLayout.createSequentialGroup()
                        .addComponent(dishOverviewTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dishOverviewNewDishButton))))
        );
        dishOverviewLayout.setVerticalGroup(
            dishOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewLayout.createSequentialGroup()
                .addGroup(dishOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(dishOverviewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dishOverviewTitle))
                    .addComponent(dishOverviewNewDishButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dishOverviewContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout dishOverviewPaneLayout = new javax.swing.GroupLayout(dishOverviewPane);
        dishOverviewPane.setLayout(dishOverviewPaneLayout);
        dishOverviewPaneLayout.setHorizontalGroup(
            dishOverviewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewPaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(dishOverview, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
        dishOverviewPaneLayout.setVerticalGroup(
            dishOverviewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishOverviewPaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(dishOverview, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addGap(200, 200, 200))
        );

        dishContentPane.add(dishOverviewPane);

        contentPane.add(dishContentPane, "dishContentPane");
        dishContentPane.getAccessibleContext().setAccessibleName("dishContentPane");

        settingsContentPane.setName("settingsContentPane"); // NOI18N

        settingsTitle.setFont(new java.awt.Font("Roboto Condensed Light", 1, 24)); // NOI18N
        settingsTitle.setText("Settings");

        settingsAppTitle.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        settingsAppTitle.setText("Application title:");

        settingsAppVersion.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        settingsAppVersion.setText("Application version:");

        settingsAppLicencee.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        settingsAppLicencee.setText("Application License Group:");

        settingsAppTitleInput.setText("jTextField1");

        settingsAppVersionInput.setText("jTextField1");
        settingsAppVersionInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsAppVersionInputActionPerformed(evt);
            }
        });

        settingsAppLicenceeInput.setText("jTextField1");
        settingsAppLicenceeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsAppLicenceeInputActionPerformed(evt);
            }
        });

        settingsSaveButton.setText("Save");
        settingsSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsSaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settingsContentPaneLayout = new javax.swing.GroupLayout(settingsContentPane);
        settingsContentPane.setLayout(settingsContentPaneLayout);
        settingsContentPaneLayout.setHorizontalGroup(
            settingsContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsContentPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(settingsContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingsSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(settingsContentPaneLayout.createSequentialGroup()
                        .addGroup(settingsContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(settingsAppTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(settingsTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(settingsAppVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(settingsAppLicencee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(settingsContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(settingsAppTitleInput, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(settingsAppVersionInput, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(settingsAppLicenceeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(894, Short.MAX_VALUE))
        );
        settingsContentPaneLayout.setVerticalGroup(
            settingsContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsContentPaneLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(settingsTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingsAppTitle)
                    .addComponent(settingsAppTitleInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingsAppVersion)
                    .addComponent(settingsAppVersionInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingsAppLicencee)
                    .addComponent(settingsAppLicenceeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(settingsSaveButton)
                .addContainerGap(406, Short.MAX_VALUE))
        );

        contentPane.add(settingsContentPane, "settingsContentPane");
        settingsContentPane.getAccessibleContext().setAccessibleName("settingsContentPane");

        getContentPane().add(contentPane);

        menuBar.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N

        fileMenu.setText("File");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        settingsMenuItem.setText("Settings");
        settingsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(settingsMenuItem);

        exitMenu.setText("Exit Program");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenu);

        menuBar.add(fileMenu);

        basicDataMenu.setText("Basic Data");

        overviewMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        overviewMenu.setText("Overview");
        overviewMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overviewMenuActionPerformed(evt);
            }
        });
        basicDataMenu.add(overviewMenu);
        basicDataMenu.add(seperator);

        flightMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        flightMenu.setText("Manage Flights");
        flightMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightMenuActionPerformed(evt);
            }
        });
        basicDataMenu.add(flightMenu);

        dishMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        dishMenu.setText("Manage Dishes");
        dishMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dishMenuActionPerformed(evt);
            }
        });
        basicDataMenu.add(dishMenu);

        manageMenu.setText("Manage ...");
        manageMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageMenuActionPerformed(evt);
            }
        });
        basicDataMenu.add(manageMenu);

        menuBar.add(basicDataMenu);

        helpMenu.setText("Help");

        aboutSubMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        aboutSubMenu.setText("About");
        aboutSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutSubMenuActionPerformed(evt);
            }
        });
        helpMenu.add(aboutSubMenu);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        getAccessibleContext().setAccessibleDescription("");
        getAccessibleContext().setAccessibleParent(contentPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dishesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dishesButtonActionPerformed
        GuiUtils.changeNavbar(dishesButton, navPane);
        GuiUtils.swapActivePane(dishContentPane);
    }//GEN-LAST:event_dishesButtonActionPerformed

    private void flightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightButtonActionPerformed
        GuiUtils.changeNavbar(flightButton, navPane);
        GuiUtils.swapActivePane(flightContentPane);
    }//GEN-LAST:event_flightButtonActionPerformed

    private void overviewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overviewButtonActionPerformed
        GuiUtils.changeNavbar(overviewButton, navPane);
        GuiUtils.swapActivePane(overviewContentPane);
    }//GEN-LAST:event_overviewButtonActionPerformed

    private void overviewButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_overviewButtonFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_overviewButtonFocusGained

    private void flightButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flightButtonMouseClicked

    }//GEN-LAST:event_flightButtonMouseClicked

    private void overviewButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_overviewButtonMouseClicked

    }//GEN-LAST:event_overviewButtonMouseClicked

    private void quickAccessDishDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickAccessDishDeleteButtonActionPerformed
        if (dishTableController.getSelectedDish() != null) {
            String name = dishTableController.getSelectedDish().getName();
            deleteDishDialogueNameLabel.setText(name);
            deleteDishDialogue.pack();
            deleteDishDialogue.setLocationRelativeTo(quickAccess);
            deleteDishDialogue.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No dish selected.", "Notification", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_quickAccessDishDeleteButtonActionPerformed

    private void quickAccessDishCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickAccessDishCreateButtonActionPerformed
        // Create dish button pressed on main overview
        createDishDialogue.setLocationRelativeTo(quickAccess);
        createDishDialogue.setVisible(true);
    }//GEN-LAST:event_quickAccessDishCreateButtonActionPerformed

    private void quickAccessFlightDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickAccessFlightDeleteButtonActionPerformed
        if (flightTableController.getSelectedFlight() != null) {
            String name = flightTableController.getSelectedFlight().getName();
            deleteFlightDialogueNameLabel.setText(name);
            deleteFlightDialogue.pack();
            deleteFlightDialogue.setLocationRelativeTo(quickAccess);
            deleteFlightDialogue.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No flight selected.", "Notification", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_quickAccessFlightDeleteButtonActionPerformed

    private void quickAccessFlightCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickAccessFlightCreateButtonActionPerformed
        // Create flight button pressed on main overview
        createFlightDialogue.setLocationRelativeTo(quickAccess);
        createFlightDialogue.setVisible(true);

    }//GEN-LAST:event_quickAccessFlightCreateButtonActionPerformed

    private void flightOverviewActionsDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightOverviewActionsDeleteActionPerformed
        if (flightTableController.getSelectedFlight() != null) {
            String name = flightTableController.getSelectedFlight().getName();
            deleteFlightDialogueNameLabel.setText(name);
            deleteFlightDialogue.pack();
            deleteFlightDialogue.setLocationRelativeTo(flightOverviewActionsDelete);
            deleteFlightDialogue.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No flight selected.", "Notification", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_flightOverviewActionsDeleteActionPerformed
    // Show update dialogue
    private void flightOverviewActionsUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightOverviewActionsUpdateActionPerformed
        // Casts a dialogue when trying to update a flight inside the flight menue.

        Flight flightToUpdate = flightTableController.getSelectedFlight();
        if (flightToUpdate == null) {
            flightOverviewActionsFeedbackLabel.setText("You need to select a flight to update it.");
            return;
        }
        flightOverviewActionsFeedbackLabel.setText("");
        // Set the current variables to the input fields.

        updateFlightDialogueNameInput.setText(flightToUpdate.getName());
        updateFlightDialogueIDInput.setText(flightToUpdate.getId());
        updateFlightDialogueStartInput.setText(flightToUpdate.getStartPoint());
        updateFlightDialogueDestInput.setText(flightToUpdate.getDestinationAirport());

        updateFlightDialogue.setLocationRelativeTo(flightOverviewPane);
        updateFlightDialogue.setVisible(true);

    }//GEN-LAST:event_flightOverviewActionsUpdateActionPerformed

    private void updateFlightDialogueNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFlightDialogueNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateFlightDialogueNameInputActionPerformed

    private void updateFlightDialogueCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFlightDialogueCancelButtonActionPerformed
        updateFlightDialogue.setVisible(false);

    }//GEN-LAST:event_updateFlightDialogueCancelButtonActionPerformed
    // Updates a flight
    private void updateFlightDialogueUpdateButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFlightDialogueUpdateButton1ActionPerformed
        String id = updateFlightDialogueIDInput.getText();
        String name = updateFlightDialogueNameInput.getText().trim();
        String startAirport = updateFlightDialogueStartInput.getText().trim();
        String destAirport = updateFlightDialogueDestInput.getText().trim();

        boolean isName = EvalHelper.isName(name);
        boolean isAirport = EvalHelper.isAirport(startAirport.trim());
        boolean isDest = EvalHelper.isDestination(destAirport.trim());

        if (!isName || !isAirport || !isDest) {
            JOptionPane.showMessageDialog(this, "Invalid input parameters. Strings must have at least a length of 4.", "Something went wrong...", JOptionPane.WARNING_MESSAGE);
            return;
        }

        for (Flight flight : Flight.getAllFlights()) {
            if (flight.getId().equals(id)) {
                System.out.println("true");
                flight.update(name.trim(), startAirport.trim(), destAirport.trim());
                System.out.println("main: " + flight);
                // After flight is updated, display the updated values in the table 
                // and the overview panel
                flightTableController.refreshFlightRow(flight);
                flightTableController.updateOverview(flight);
            }
        }
        updateFlightDialogue.setVisible(false);
    }//GEN-LAST:event_updateFlightDialogueUpdateButton1ActionPerformed

    private void createFlightDialogueNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFlightDialogueNameInputActionPerformed

    }//GEN-LAST:event_createFlightDialogueNameInputActionPerformed
    // Show create dialogue
    private void createFlightDialogueCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFlightDialogueCancelButtonActionPerformed
        // Canceled the flight creation
        createFlightDialogue.setVisible(false);
        // Set input holders empty
        createFlightDialogueErrors.setText("");
        createFlightDialogueErrorLabel.setText("");
        createFlightDialogueNameInput.setText("");
        createFlightDialogueStartInput.setText("");
        createFlightDialogueDestInput.setText("");

        // Reset colors
        createFlightDialogueNameInput.setBackground(new Color(240, 240, 240));
        createFlightDialogueNameInput.setForeground(Color.BLACK);
        createFlightDialogueStartInput.setBackground(new Color(240, 240, 240));
        createFlightDialogueStartInput.setForeground(Color.BLACK);
        createFlightDialogueDestInput.setBackground(new Color(240, 240, 240));
        createFlightDialogueDestInput.setForeground(Color.BLACK);
        // Reset the sliders
        createFlightDialoguePassengerSlider.setValue(1);
        createFlightDialogueDishCapSlider.setValue(1); // Events changing the display jlabel will be triggered automatically.


    }//GEN-LAST:event_createFlightDialogueCancelButtonActionPerformed
    // Create a flight
    private void flightDialogueCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightDialogueCreateButtonActionPerformed
        // Get the values from the creation dialogue
        String name = createFlightDialogueNameInput.getText().trim();
        String startAirport = createFlightDialogueStartInput.getText().trim();
        String destAirport = createFlightDialogueDestInput.getText().trim();

        int passengerAmount = createFlightDialoguePassengerSlider.getValue();
        int dishCapacity = createFlightDialogueDishCapSlider.getValue();

        boolean isName = EvalHelper.isName(name.trim());
        boolean isAirport = EvalHelper.isAirport(startAirport.trim());
        boolean isDest = EvalHelper.isDestination(destAirport.trim());
        // Evaluate the input
        if ((isName
                && isAirport
                && isDest)) {
            // If input is OK
            String flightNumber = Flight.genFlightNumber(startAirport, destAirport);
            // Create the flight (adds itself to the data array in the background stored in the flight class)
            Flight newFlight = new Flight(name, flightNumber, startAirport, destAirport, passengerAmount, dishCapacity);
            // Add the flight to the table
            flightTableController.addFlight(newFlight);
            // Add the flight to the database
            dataBase.insertFlight(newFlight);

            //Hide dialogue
            createFlightDialogue.setVisible(false);
            Task t = new Task(TaskObjectType.Flight, TaskCallType.Create);
        } else {
            String errors = "";
            //Display the errors
            //Name ok?
            if (!isName) {
                createFlightDialogueNameInput.setBackground(new Color(200, 20, 20));
                createFlightDialogueNameInput.setForeground(Color.WHITE);
                errors += "Name, ";
            } else {
                createFlightDialogueNameInput.setBackground(new Color(240, 240, 240));
                createFlightDialogueNameInput.setForeground(Color.BLACK);
            }
            // Start Airport ok?
            if (!isAirport) {
                createFlightDialogueStartInput.setBackground(new Color(200, 20, 20));
                createFlightDialogueStartInput.setForeground(Color.WHITE);
                errors += "Airport, ";
            } else {
                createFlightDialogueStartInput.setBackground(new Color(240, 240, 240));
                createFlightDialogueStartInput.setForeground(Color.BLACK);
            }
            //Destination ok?
            if (!isDest) {
                createFlightDialogueDestInput.setBackground(new Color(200, 20, 20));
                createFlightDialogueDestInput.setForeground(Color.WHITE);
                errors += "Destination";
            } else {
                createFlightDialogueDestInput.setBackground(new Color(240, 240, 240));
                createFlightDialogueDestInput.setForeground(Color.BLACK);
            }
            createFlightDialogueErrorLabel.setText("Something went wrong, please try again and check: ");
            createFlightDialogueErrors.setText(errors);
        }
    }//GEN-LAST:event_flightDialogueCreateButtonActionPerformed

    private void createFlightDialoguePassengerSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_createFlightDialoguePassengerSliderStateChanged
        // Passenger slider value changed - set the new display value
        createFlightDialoguePassengerAmount.setText(String.valueOf(createFlightDialoguePassengerSlider.getValue()));
    }//GEN-LAST:event_createFlightDialoguePassengerSliderStateChanged

    private void createFlightDialogueDishCapSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_createFlightDialogueDishCapSliderStateChanged
        // Dish capacity slider value changed - set the new display value
        createFlightDialogueDishCapAmount.setText(String.valueOf(createFlightDialogueDishCapSlider.getValue()));
    }//GEN-LAST:event_createFlightDialogueDishCapSliderStateChanged

    private void aboutSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutSubMenuActionPerformed
        GuiUtils.changeNavbar(settingsButton, navPane);
        GuiUtils.swapActivePane(settingsContentPane);
    }//GEN-LAST:event_aboutSubMenuActionPerformed

    private void flightMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightMenuActionPerformed
        // Access flight tab over navbar
        GuiUtils.changeNavbar(flightButton, navPane);
        GuiUtils.swapActivePane(flightContentPane);
    }//GEN-LAST:event_flightMenuActionPerformed

    private void dishMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dishMenuActionPerformed
        // Access dish tab over navbar
        GuiUtils.changeNavbar(dishesButton, navPane);
        GuiUtils.swapActivePane(dishContentPane);
    }//GEN-LAST:event_dishMenuActionPerformed

    private void overviewMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overviewMenuActionPerformed
        // Access overview tab over navbar
        GuiUtils.changeNavbar(overviewButton, navPane);
        GuiUtils.swapActivePane(overviewContentPane);
    }//GEN-LAST:event_overviewMenuActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed

    private void manageMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageMenuActionPerformed
        // Show message, that the Manage... menu item is not connected to any logic yet.
        JOptionPane.showMessageDialog(this, "Not implemented, yet.", "Notification", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_manageMenuActionPerformed

    private void deleteFlightDialogueCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFlightDialogueCancelButtonActionPerformed
        // hide the dialogue
        deleteFlightDialogue.setVisible(false);
    }//GEN-LAST:event_deleteFlightDialogueCancelButtonActionPerformed

    private void deleteFlightDialogueConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFlightDialogueConfirmButtonActionPerformed
        // get the selected flight
        Flight selectedFlight = flightTableController.getSelectedFlight();
        // delete the representation inside the table
        flightTableController.deleteSelected();
        // remove the object from the database
        dataBase.deleteFlight(selectedFlight);
        // delete the flight
        selectedFlight.delete();
        // hide the dialogue
        deleteFlightDialogue.setVisible(false);

        Task t = new Task(TaskObjectType.Flight, TaskCallType.Delete);

    }//GEN-LAST:event_deleteFlightDialogueConfirmButtonActionPerformed

    private void dishOverviewActionsDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dishOverviewActionsDeleteActionPerformed
        if (dishTableController.getSelectedDish() != null) {
            String name = dishTableController.getSelectedDish().getName();
            deleteDishDialogueNameLabel.setText(name);
            deleteDishDialogue.pack();
            deleteDishDialogue.setLocationRelativeTo(quickAccess);
            deleteDishDialogue.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No dish selected.", "Notification", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_dishOverviewActionsDeleteActionPerformed

    private void dishOverviewActionsUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dishOverviewActionsUpdateActionPerformed
        // Casts a dialogue when trying to update a flight inside the flight menue.

        Dish dishToUpdate = dishTableController.getSelectedDish();
        if (dishToUpdate == null) {
            dishOverviewActionsFeedbackLabel.setText("You need to select a dish to update it.");
            return;
        }
        dishOverviewActionsFeedbackLabel.setText("");
        // Set the current variables to the input fields.

        updateDishDialogueNameInput.setText(dishToUpdate.getName());
        updateDishDialogueIDInput.setText(dishToUpdate.getId());
        updateDishDialogueVeganInput.setSelected(dishToUpdate.isVegan());
        updateDishDialogueVegetarianInput.setSelected(dishToUpdate.isVegetarian());

        updateDishDialogue.setLocationRelativeTo(dishOverviewPane);
        updateDishDialogue.setVisible(true);
    }//GEN-LAST:event_dishOverviewActionsUpdateActionPerformed

    private void updateDishDialogueNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDishDialogueNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateDishDialogueNameInputActionPerformed

    private void updateDishDialogueCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDishDialogueCancelButtonActionPerformed
        updateDishDialogue.setVisible(false);
    }//GEN-LAST:event_updateDishDialogueCancelButtonActionPerformed

    private void updateDishDialogueUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDishDialogueUpdateButtonActionPerformed
        String id = updateDishDialogueIDInput.getText();
        String name = updateDishDialogueNameInput.getText().trim();
        boolean vegan = updateDishDialogueVeganInput.isSelected();
        boolean vegetarian = updateDishDialogueVegetarianInput.isSelected();
        float price;
        try {
            price = Float.valueOf(updateDishDialoguePriceInput.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price. Try again.", "Something went wrong...", JOptionPane.WARNING_MESSAGE);
            updateDishDialoguePriceInput.setText("");
            return;
        }

        if (vegan) {
            vegetarian = true;
        }

        boolean isName = EvalHelper.isName(name);
        boolean isPrice = EvalHelper.isPrice(price);

        if (!isName || !isPrice) {
            if (!isPrice) {
                JOptionPane.showMessageDialog(this, "Invalid price.", "Something went wrong...", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Invalid name.", "Something went wrong...", JOptionPane.WARNING_MESSAGE);
                return;
            }

        }

        for (Dish dish : Dish.getAllDishes()) {
            if (dish.getId().equals(id)) {

                dish.update(name, vegan, vegetarian, price);

                // After flight is updated, display the updated values in the table 
                // and the overview panel
                dishTableController.refreshDishRow(dish);
                dishTableController.updateOverview(dish);
            }
        }
        updateDishDialogue.setVisible(false);
    }//GEN-LAST:event_updateDishDialogueUpdateButtonActionPerformed

    private void updateDishDialoguePriceInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDishDialoguePriceInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateDishDialoguePriceInputActionPerformed

    private void updateDishDialogueVeganInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDishDialogueVeganInputActionPerformed
        //If dish is vegan, it is vegetarian as well.
        if (updateDishDialogueVeganInput.isSelected()) {
            updateDishDialogueVegetarianInput.setSelected(true);
        }
    }//GEN-LAST:event_updateDishDialogueVeganInputActionPerformed

    private void createDishDialogueNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDishDialogueNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createDishDialogueNameInputActionPerformed

    private void createDishDialogueCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDishDialogueCancelButtonActionPerformed
        createDishDialogue.setVisible(false);
        // Set input holders empty
        createDishDialogueNameInput.setText("");
        createDishVeganInput.setSelected(false);
        createDishVegetarianInput.setSelected(false);
        createDishDialoguePriceInput.setText("");
    }//GEN-LAST:event_createDishDialogueCancelButtonActionPerformed

    private void createDishDialogueCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDishDialogueCreateButtonActionPerformed
        // Get the values from the creation dialogue
        String id = createDishDialogueIDInput.getText();
        String name = createDishDialogueNameInput.getText().trim();
        boolean vegan = createDishVeganInput.isSelected();
        boolean vegetarian = createDishVegetarianInput.isSelected();
        float price;
        try {
            price = Float.valueOf(createDishDialoguePriceInput.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price. Try again.", "Something went wrong...", JOptionPane.WARNING_MESSAGE);
            createDishDialoguePriceInput.setText("");
            return;
        }

        if (vegan) {
            vegetarian = true;
        }

        boolean isName = EvalHelper.isName(name);
        boolean isPrice = EvalHelper.isPrice(price);

        if (!isName || !isPrice) {
            if (!isPrice) {
                JOptionPane.showMessageDialog(this, "Invalid price.", "Something went wrong...", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Invalid name.", "Something went wrong...", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        // If input is OK
        // Create the dish (adds itself to the data array in the background stored in the flight class)
        Dish newDish = new Dish(name, vegan, vegetarian, price);
        // Add the dish to the table
        dishTableController.addDish(newDish);
        // Add the dish to the database
        dataBase.insertDish(newDish);

        //Hide dialogue
        createDishDialogue.setVisible(false);
        Task t = new Task(TaskObjectType.Dish, TaskCallType.Create);
    }//GEN-LAST:event_createDishDialogueCreateButtonActionPerformed

    private void createDishVegetarianInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDishVegetarianInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createDishVegetarianInputActionPerformed

    private void createDishVeganInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDishVeganInputActionPerformed
        if (createDishVeganInput.isSelected()) {
            createDishVegetarianInput.setSelected(true);
        }
    }//GEN-LAST:event_createDishVeganInputActionPerformed

    private void createDishDialoguePriceInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDishDialoguePriceInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createDishDialoguePriceInputActionPerformed

    private void dishOverviewNewDishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dishOverviewNewDishButtonActionPerformed
        // Create DISH button pressed on DISH overview
        createDishDialogue.setLocationRelativeTo(dishOverviewContent);
        createDishDialogue.setVisible(true);
    }//GEN-LAST:event_dishOverviewNewDishButtonActionPerformed

    private void flightOverviewNewFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightOverviewNewFlightButtonActionPerformed
        // Create FLIGHT button pressed on flight overview
        createFlightDialogue.setLocationRelativeTo(flightOverviewContent);
        createFlightDialogue.setVisible(true);
    }//GEN-LAST:event_flightOverviewNewFlightButtonActionPerformed

    private void deletDishDialogueConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletDishDialogueConfirmButtonActionPerformed
        // get the selected flight
        Dish selectedDish = dishTableController.getSelectedDish();
        // delete the representation inside the table
        dishTableController.deleteSelected();
        // delete the dish in the database
        dataBase.deleteDish(selectedDish);
        // delete the flight
        selectedDish.delete();
        // hide the dialogue
        deleteDishDialogue.setVisible(false);

        Task t = new Task(TaskObjectType.Dish, TaskCallType.Delete);
    }//GEN-LAST:event_deletDishDialogueConfirmButtonActionPerformed

    private void deletDishDialogueCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletDishDialogueCancelButtonActionPerformed
        deleteDishDialogue.setVisible(false);
    }//GEN-LAST:event_deletDishDialogueCancelButtonActionPerformed

    private void settingsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsMenuItemActionPerformed
       GuiUtils.changeNavbar(settingsButton, navPane);
        GuiUtils.swapActivePane(settingsContentPane);
    }//GEN-LAST:event_settingsMenuItemActionPerformed

    private void settingsAppVersionInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsAppVersionInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingsAppVersionInputActionPerformed

    private void settingsAppLicenceeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsAppLicenceeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingsAppLicenceeInputActionPerformed

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        // TODO add your handling code here:
        GuiUtils.changeNavbar(settingsButton, navPane);
        GuiUtils.swapActivePane(settingsContentPane);
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void settingsSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsSaveButtonActionPerformed
        saveSettings();
    }//GEN-LAST:event_settingsSaveButtonActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_fileMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            // Set System L&F
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());

        } catch (UnsupportedLookAndFeelException e) {
            // handle exception
        } catch (ClassNotFoundException e) {
            // handle exception
        } catch (InstantiationException e) {
            // handle exception
        } catch (IllegalAccessException e) {
            // handle exception
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                inst = new Main().init();
                GuiUtils.initMain(inst);
                inst.logStartup();
   
            }
        });

    }

    // Main setup of the application happens here. Setting all references and creating objects
    // needed to perform actions.
    //Setup method. Only overview pane should be visible when the application starts
    // We chose this design choise so that it is easy to add more content to the frame.
    private Main init() {
        log("Initialising database...");
        // Start DataBase: Does all the data lifting.
        dataBase = new DataBase(this);

        log("Initialising components...");
        setIconImage(new ImageIcon(getClass().getClassLoader().getResource("icon_128.png")).getImage());
        // Load settings  
        loadSettings();
        
        // Get the layout manager defined in the netbeans designer
        layoutManager = (CardLayout) contentPane.getLayout();

        // show the overview panel since this is the first information that
        // the user should see after starting the application
        layoutManager.show(contentPane, "overviewContentPane");

       
        
        log("Initialising table controllers");
        // Setup the flight table controller
        flightTableController = new FlightTableController(this, flightTable);
        // populate the table. Loads flights stored in the database and pushes them
        // into the table so that they are visible to the user. This design is chosen so that 
        // we can later on load and deserialise the data inside the database object without the need
        // to change other classes.
        flightTableController.populate();
        // sets the listeners needed to listen to table select events.
        flightTableController.listen();

        // Same for the dish overview
        dishTableController = new DishTableController(this, dishTable);
        dishTableController.populate();
        dishTableController.listen();
        
        log("Starting autosave feature");
        dataBase.startAutosave();
        
        pack();
        this.setSize(1450, 660);
        // set the frame's visibility
        setVisible(true);
        // return the modified object
        return this;
    }
    
    
    // called when the database is not existing
    public void databaseNotExisting() {
        log("Database does not exist.");
        int res = JOptionPane.showOptionDialog(null, "The database file could not be found.", "Something went wrong...", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, null, null);
        System.exit(0);
    }
    
    //Log messaged
    public void log(String message) {
        System.out.println("[APP] " + message);
    }
    
    private void logStartup() {
        System.out.println("\n\n");
        System.out.printf("%-24s%n","############################################");
        System.out.printf("%-24s%n","##------------------------------------------");
        System.out.printf("%-18s%-20s%n","## "+inst.settings.getApplicationTitle()," v" + inst.settings.getApplicationVersion());
        System.out.printf("%-24s%n","##-----------------------------------------");
        System.out.printf("%-18s%-18s%n","## Licenced by",inst.settings.getApplicationLicensee());
        System.out.printf("%-24s%n","##------------------------------------------");
        System.out.printf("%-24s%n","############################################");
        System.out.println("\n\n");
        log("App running...");
    }

    
    // Refresh the display settings
    public void refreshSettings() {
        log("Refreshing display to display proper settings");
        settingsAppTitleInput.setText(settings.getApplicationTitle());
        settingsAppVersionInput.setText(settings.getApplicationVersion());
        settingsAppLicenceeInput.setText(settings.getApplicationLicensee());
        
        this.setTitle(settings.getApplicationTitle());
    }
    
    // Deserializes the data and stores it into the settings object
    private void loadSettings() {
        log("Loading settings from serialized file: datastorage/settings.ser");
        try {
            FileInputStream fileInput = new FileInputStream("datastorage/settings.ser");
            ObjectInputStream oi = new ObjectInputStream(fileInput);
            settings = (Settings) oi.readObject();

            oi.close();
            fileInput.close();
            log("Settings successfully loaded.");
            refreshSettings();
            
        } catch (IOException ioEx) {
            ioEx.printStackTrace();
        } catch (ClassNotFoundException cEx) {
            log("Failed to load settings");
            cEx.printStackTrace();
        }
    }

    /**
    * Saves the settings to a file.
    */
    private void saveSettings() {
        try {
            log("Saving settings to: datastorage/settings.ser");
            settings.setApplicationVersion(settingsAppVersionInput.getText());
            settings.setApplicationTitle(settingsAppTitleInput.getText());
            settings.setApplicationLicensee(settingsAppLicenceeInput.getText());
            
            FileOutputStream fileOutput = new FileOutputStream("datastorage/settings.ser");
            ObjectOutputStream oOut = new ObjectOutputStream(fileOutput);

            oOut.writeObject(settings);
            oOut.close();
            fileOutput.close();
            log("Settings successfully saved");
        }
        catch(IOException ioEx) {
            ioEx.printStackTrace();
        }
        refreshSettings();
        JOptionPane.showMessageDialog(this, "The settings were saved and should be displayed.", "Settings saved", JOptionPane.DEFAULT_OPTION );
    }

    // Getter and setter
    public DataBase getDataBase() {
        return dataBase;
    }

    public CardLayout getLayoutManager() {
        return layoutManager;
    }

    public JPanel getCustomContentPane() {
        return contentPane;
    }
    //Getters for dish overview

    public JLabel getDishPriceContent() {
        return dishOverviewPriceContent;
    }

    public JLabel getDishOverviewTitle() {
        return dishOverviewTitle;
    }

    public JLabel getDishOverviewIDContent() {
        return dishOverviewIDContent;
    }

    public JLabel getDishOverviewVeganContent() {
        return dishOverviewVeganCont;
    }

    public JLabel getDishOverviewVegetariannContent() {
        return dishOverviewVegetarianCont;
    }

    public JLabel getDishOverviewFlightContent() {
        return dishOverviewFlightContent;
    }

    // Getters for flight overview label
    public JLabel getFlightOverviewIDContent() {
        return flightOverviewIDContent;
    }

    public JLabel getFlightOverviewStartContent() {
        return flightOverviewStartContent;
    }

    public JLabel getFlightOverviewDestContent() {
        return flightOverviewDestContent;
    }

    public JLabel getFlightOverviewTitle() {
        return flightOverviewTitle;
    }

    public JLabel getFlightOverviewDishContent() {
        return flightOverviewDishContent;
    }

    //Getter for Task panel - Tasks are added here.
    public JPanel getTaskScrollPanel() {
        return taskScrollPanel;
    }

    public JPanel getTaskTemplate() {
        return taskTemplate;
    }

    // Getter for UI response
    public JLabel getFlightOverviewActionsFeedbackLabel() {
        return flightOverviewActionsFeedbackLabel;
    }

    //Setting object - persistent with serilization
    private Settings settings;
    // Database reference
    private DataBase dataBase;
    // Table control
    private FlightTableController flightTableController;
    private DishTableController dishTableController;
    // Layout 
    private CardLayout layoutManager;
    // Static reference to this runnable instance
    public static Main inst;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutSubMenu;
    private javax.swing.JPanel accessTaskPanel;
    private javax.swing.JMenu basicDataMenu;
    private javax.swing.JPanel contentPane;
    private javax.swing.JDialog createDishDialogue;
    private javax.swing.JButton createDishDialogueCancelButton;
    private javax.swing.JPanel createDishDialogueContentInnter;
    private javax.swing.JPanel createDishDialogueContentPane;
    private javax.swing.JButton createDishDialogueCreateButton;
    private javax.swing.JLabel createDishDialogueDescription;
    private javax.swing.JLabel createDishDialogueErrorLabel;
    private javax.swing.JLabel createDishDialogueErrors;
    private javax.swing.JLabel createDishDialogueID;
    private javax.swing.JLabel createDishDialogueIDInput;
    private javax.swing.JLabel createDishDialogueName;
    private javax.swing.JTextField createDishDialogueNameInput;
    private javax.swing.JLabel createDishDialoguePrice;
    private javax.swing.JTextField createDishDialoguePriceInput;
    private javax.swing.JLabel createDishDialogueTitle;
    private javax.swing.JLabel createDishDialogueVegan;
    private javax.swing.JLabel createDishDialogueVegetarian;
    private javax.swing.JRadioButton createDishVeganInput;
    private javax.swing.JRadioButton createDishVegetarianInput;
    private javax.swing.JDialog createFlightDialogue;
    private javax.swing.JButton createFlightDialogueCancelButton;
    private javax.swing.JPanel createFlightDialogueContentInner;
    private javax.swing.JPanel createFlightDialogueContentPane;
    private javax.swing.JLabel createFlightDialogueDescription;
    private javax.swing.JLabel createFlightDialogueDest;
    private javax.swing.JTextField createFlightDialogueDestInput;
    private javax.swing.JLabel createFlightDialogueDishCap;
    private javax.swing.JLabel createFlightDialogueDishCapAmount;
    private javax.swing.JSlider createFlightDialogueDishCapSlider;
    private javax.swing.JLabel createFlightDialogueErrorLabel;
    private javax.swing.JLabel createFlightDialogueErrors;
    private javax.swing.JLabel createFlightDialogueID;
    private javax.swing.JLabel createFlightDialogueIDInput;
    private javax.swing.JLabel createFlightDialogueName;
    private javax.swing.JTextField createFlightDialogueNameInput;
    private javax.swing.JLabel createFlightDialoguePassenger;
    private javax.swing.JLabel createFlightDialoguePassengerAmount;
    private javax.swing.JSlider createFlightDialoguePassengerSlider;
    private javax.swing.JLabel createFlightDialogueStart;
    private javax.swing.JTextField createFlightDialogueStartInput;
    private javax.swing.JLabel createFlightDialogueTitle;
    private javax.swing.JButton deletDishDialogueCancelButton;
    private javax.swing.JButton deletDishDialogueConfirmButton;
    private javax.swing.JLabel deletDishDialogueFirstLabel;
    private javax.swing.JLabel deletDishDialogueSecondLabel;
    private javax.swing.JDialog deleteDishDialogue;
    private javax.swing.JLabel deleteDishDialogueNameLabel;
    private javax.swing.JDialog deleteFlightDialogue;
    private javax.swing.JButton deleteFlightDialogueCancelButton;
    private javax.swing.JButton deleteFlightDialogueConfirmButton;
    private javax.swing.JLabel deleteFlightDialogueFirstLabel;
    private javax.swing.JLabel deleteFlightDialogueNameLabel;
    private javax.swing.JLabel deleteFlightDialogueSecondLabel;
    private javax.swing.JPanel dishContentPane;
    private javax.swing.JMenuItem dishMenu;
    private javax.swing.JPanel dishOverview;
    private javax.swing.JPanel dishOverviewActions;
    private javax.swing.JButton dishOverviewActionsDelete;
    private javax.swing.JLabel dishOverviewActionsFeedbackLabel;
    private javax.swing.JPanel dishOverviewActionsFeedbackPane;
    private javax.swing.JButton dishOverviewActionsUpdate;
    private javax.swing.JPanel dishOverviewAttr;
    private javax.swing.JPanel dishOverviewContent;
    private javax.swing.JLabel dishOverviewFlightContent;
    private javax.swing.JLabel dishOverviewFlightLabel;
    private javax.swing.JPanel dishOverviewFlightPane;
    private javax.swing.JPanel dishOverviewID;
    private javax.swing.JLabel dishOverviewIDContent;
    private javax.swing.JLabel dishOverviewIDLabel;
    private javax.swing.JButton dishOverviewNewDishButton;
    private javax.swing.JPanel dishOverviewPane;
    private javax.swing.JLabel dishOverviewPriceContent;
    private javax.swing.JLabel dishOverviewPriceLabel;
    private javax.swing.JLabel dishOverviewTitle;
    private javax.swing.JLabel dishOverviewVeganCont;
    private javax.swing.JLabel dishOverviewVeganLabel;
    private javax.swing.JLabel dishOverviewVegetarianCont;
    private javax.swing.JLabel dishOverviewVegetarianLabel;
    private javax.swing.JScrollPane dishScrollPane;
    private javax.swing.JTable dishTable;
    private javax.swing.JPanel dishTableInnerPane;
    private javax.swing.JPanel dishTablePane;
    private javax.swing.JPanel dishTablePaneInner;
    private javax.swing.JButton dishesButton;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton flightButton;
    private javax.swing.JPanel flightContentPane;
    private javax.swing.JButton flightDialogueCreateButton;
    private javax.swing.JMenuItem flightMenu;
    private javax.swing.JPanel flightOverview;
    private javax.swing.JPanel flightOverviewActions;
    private javax.swing.JButton flightOverviewActionsDelete;
    private javax.swing.JLabel flightOverviewActionsFeedbackLabel;
    private javax.swing.JPanel flightOverviewActionsFeedbackPane;
    private javax.swing.JButton flightOverviewActionsUpdate;
    private javax.swing.JPanel flightOverviewContent;
    private javax.swing.JLabel flightOverviewDestContent;
    private javax.swing.JLabel flightOverviewDestLabel;
    private javax.swing.JLabel flightOverviewDishContent;
    private javax.swing.JLabel flightOverviewDishLabel;
    private javax.swing.JPanel flightOverviewDishPane;
    private javax.swing.JPanel flightOverviewID;
    private javax.swing.JLabel flightOverviewIDContent;
    private javax.swing.JLabel flightOverviewIDLabel;
    private javax.swing.JButton flightOverviewNewFlightButton;
    private javax.swing.JPanel flightOverviewPane;
    private javax.swing.JLabel flightOverviewStartContent;
    private javax.swing.JPanel flightOverviewStartDest;
    private javax.swing.JLabel flightOverviewStartLabel;
    private javax.swing.JLabel flightOverviewTitle;
    private javax.swing.JScrollPane flightScrollPane;
    private javax.swing.JTable flightTable;
    private javax.swing.JPanel flightTableInnerPane;
    private javax.swing.JPanel flightTablePane;
    private javax.swing.JLabel groupLabel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel lastTasks;
    private javax.swing.JMenuItem manageMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel navPane;
    private javax.swing.JLabel overvieContentTitle;
    private javax.swing.JButton overviewButton;
    private javax.swing.JPanel overviewContent;
    private javax.swing.JLabel overviewContentIntroduction;
    private javax.swing.JPanel overviewContentPane;
    private javax.swing.JTextPane overviewContentScrollFlightDishPane;
    private javax.swing.JScrollPane overviewContentScrollTextPane;
    private javax.swing.JScrollPane overviewContentScrollTextPane2;
    private javax.swing.JTextPane overviewContentScrollTextPaneContent;
    private javax.swing.JLabel overviewContentSecondTitle;
    private javax.swing.JScrollPane overviewContentThirdScrollPane;
    private javax.swing.JTextPane overviewContentThirdScrollPaneContent;
    private javax.swing.JLabel overviewContentThirdTitle;
    private javax.swing.JMenuItem overviewMenu;
    private javax.swing.JPanel overviewPane;
    private javax.swing.JPanel quickAccess;
    private javax.swing.JButton quickAccessDishCreateButton;
    private javax.swing.JButton quickAccessDishDeleteButton;
    private javax.swing.JPanel quickAccessDishTab;
    private javax.swing.JButton quickAccessFlightCreateButton;
    private javax.swing.JButton quickAccessFlightDeleteButton;
    private javax.swing.JPanel quickAccessFlightTab;
    private javax.swing.JTabbedPane quickAccessTabPane;
    private javax.swing.JLabel quickAcessLabel;
    private javax.swing.JPopupMenu.Separator seperator;
    private javax.swing.JLabel settingsAppLicencee;
    private javax.swing.JTextField settingsAppLicenceeInput;
    private javax.swing.JLabel settingsAppTitle;
    private javax.swing.JTextField settingsAppTitleInput;
    private javax.swing.JLabel settingsAppVersion;
    private javax.swing.JTextField settingsAppVersionInput;
    private javax.swing.JButton settingsButton;
    private javax.swing.JPanel settingsContentPane;
    private javax.swing.JMenuItem settingsMenuItem;
    private javax.swing.JButton settingsSaveButton;
    private javax.swing.JLabel settingsTitle;
    private javax.swing.JLabel taskContent;
    private javax.swing.JLabel taskLabel;
    private javax.swing.JScrollPane taskScrollPane;
    private javax.swing.JPanel taskScrollPanel;
    private javax.swing.JPanel taskTemplate;
    private javax.swing.JDialog updateDishDialogue;
    private javax.swing.JButton updateDishDialogueCancelButton;
    private javax.swing.JPanel updateDishDialogueContentInner;
    private javax.swing.JPanel updateDishDialogueContentPane;
    private javax.swing.JLabel updateDishDialogueDescription;
    private javax.swing.JLabel updateDishDialogueID;
    private javax.swing.JLabel updateDishDialogueIDInput;
    private javax.swing.JLabel updateDishDialogueName;
    private javax.swing.JTextField updateDishDialogueNameInput;
    private javax.swing.JLabel updateDishDialoguePrice;
    private javax.swing.JTextField updateDishDialoguePriceInput;
    private javax.swing.JLabel updateDishDialogueTitle;
    private javax.swing.JButton updateDishDialogueUpdateButton;
    private javax.swing.JLabel updateDishDialogueVegan;
    private javax.swing.JRadioButton updateDishDialogueVeganInput;
    private javax.swing.JLabel updateDishDialogueVegetarian;
    private javax.swing.JRadioButton updateDishDialogueVegetarianInput;
    private javax.swing.JDialog updateFlightDialogue;
    private javax.swing.JButton updateFlightDialogueCancelButton;
    private javax.swing.JPanel updateFlightDialogueContentInner;
    private javax.swing.JPanel updateFlightDialogueContentPane;
    private javax.swing.JLabel updateFlightDialogueDescription;
    private javax.swing.JLabel updateFlightDialogueDest;
    private javax.swing.JTextField updateFlightDialogueDestInput;
    private javax.swing.JLabel updateFlightDialogueID;
    private javax.swing.JLabel updateFlightDialogueIDInput;
    private javax.swing.JLabel updateFlightDialogueName;
    private javax.swing.JTextField updateFlightDialogueNameInput;
    private javax.swing.JLabel updateFlightDialogueStart;
    private javax.swing.JTextField updateFlightDialogueStartInput;
    private javax.swing.JLabel updateFlightDialogueTitle;
    private javax.swing.JButton updateFlightDialogueUpdateButton1;
    // End of variables declaration//GEN-END:variables

}
